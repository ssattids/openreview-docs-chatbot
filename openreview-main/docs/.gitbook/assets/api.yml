openapi: "3.0.3"
info:
  version: 1.0.0
  title: OpenReview
  description: OpenReview API documentation
  termsOfService: https://openreview.net/terms
  contact:
    name: OpenReview Team
    email: info@openreview.net
    url: https://openreview.net
servers:
  - url: https://api2.openreview.net
    description: Production Server
  - url: https://devapi2.openreview.net
    description: Development Server
security:
  - cookieAuth: []
paths:
  /login:
    post:
      tags:
        - Users
      description: Login to openreview
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - id
                - password
              properties:
                id:
                  description: Any confirmed email address that is associated to the OpenReview Profile.
                  type: string
                  minLength: 1
                password:
                  type: string
                  minLength: 1
                expiresIn:
                  description: An optional parameter to determine the number of seconds before the assigned token expires.
                  type: integer
                  nullable: true
                  minimum: 1
              additionalProperties: false
      responses:
        '200':
          description: An object containing the assigned token and the OpenReview Profile.
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  token:
                    type: string
                  user:
                    type: object
                    additionalProperties: false
                    properties:
                      id:
                        description: Email used to log in.
                        type: string
                      profile:
                        $ref: '#/components/schemas/SimplifiedProfile'
          headers:
            Set-Cookie:
              schema:
                type: string
                example: openreview.accessToken=abcde12345; Path=/;
  /register:
    post:
      tags:
        - Users
      description: Register a new user
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              anyOf:
                - required:
                  - email
                  - password
                  - fullname
                - required:
                  - email
                  - password
                  - name
                - required:
                  - email
                  - password
                  - id
              properties:
                email:
                  description: Email that will be used to log in to OpenReview.
                  type: string
                  minLength: 1
                  maxLength: 254
                password:
                  type: string
                fullname:
                  type: string
                  minLength: 1
                name:
                  type: object
                  required:
                    - first
                  properties:
                    first:
                      type: string
                      minLength: 1
                    middle:
                      type: string
                      nullable: true
                    last:
                      type: string
                      minLength: 1
                    preferred:
                      description: A Profile can contain more than one object name. Setting this field to true will make this the preferred name.
                      type: boolean
                  additionalProperties: false
                id:
                  description: This is a Profile id. This parameter is only required when claiming an existing a Profile in OpenReview.
                  type: string
                token:
                  description: Token from Turnstile that proves that the user is human. This is required for registration.
                  type: string
                  nullable: true
              additionalProperties: false
      responses:
        '200':
          description: The Profile that is saved to the database.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
  /activate/{token}:
    put:
      tags:
        - Users
      description: Activate a user
      operationId: activate
      parameters:
        - name: token
          in: path
          description: activation token
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              properties:
                content:
                  $ref: '#/components/schemas/ProfileContent'
      responses:
        '200':
          description: user token
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/Profile'
  /profile/moderate:
    post:
      tags:
        - Users
      description: Moderate a user Profile
      operationId: moderateProfile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - decision
              additionalProperties: false
              properties:
                id:
                  type: string
                decision:
                  type: string
                  enum:
                    - accept
                    - reject
                    - block
                    - unblock
                    - delete
                    - restore
                    - limit
                sendMail:
                  type: boolean
                  nullable: true
                reason:
                  type: string
                  nullable: true
      responses:
        '200':
          description: user token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        '400':
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /activatelink/{token}:
    put:
      tags:
        - Users
      description: Activate a user
      operationId: activateLink
      parameters:
        - name: token
          in: path
          description: Token used to activate new email
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Confirmed email
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  confirmedEmail:
                    type: string
  /activatable/{token}:
    get:
      tags:
        - Users
      description: Check if a user is activatable
      operationId: activatableToken
      parameters:
        - name: token
          in: path
          description: activation token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: user token
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  profile:
                    $ref: '#/components/schemas/Profile'
                  activatable:
                    type: object
                  prefixed_positions:
                    type: array
                  prefixed_relations:
                    type: array
                  institutions:
                    type: array
  /activatable:
    post:
      tags:
        - Users
      description: Check if a user is activatable
      operationId: activatable
      requestBody:
        required: true
        content:
          application/json:
            schema:
              required:
                - id
              properties:
                id:
                  type: string
                  minLength: 1
                  maxLength: 254
              additionalProperties: false
      responses:
        '200':
          description: user token
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  id:
                    type: string
  /reset/{token}:
    put:
      tags:
        - Users
      description: Reset a user password
      operationId: resetPassword
      parameters:
        - name: token
          in: path
          description: reset token
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - password
              additionalProperties: false
              properties:
                password:
                  type: string
      responses:
        '200':
          description: User is logged in after the password is reset.
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  token:
                    type: string
                  user:
                    type: object
                    additionalProperties: false
                    properties:
                      id:
                        description: Email used to log in.
                        type: string
                      profile:
                        $ref: '#/components/schemas/SimplifiedProfile'

  /logout:
    post:
      tags:
        - Users
      description: Logout a user
      operationId: logout
      responses:
        '200':
          description: Empty object
          content:
            application/json:
              schema:
                type:
                  object
  /resettable/{token}:
    get:
      tags:
        - Users
      description: Check if a user is resettable
      operationId: resettableToken
      parameters:
        - name: token
          in: path
          description: reset token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: user token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
  /refreshToken:
    post:
      tags:
        - Users
      description: Refresh a user token
      operationId: refreshToken
      responses:
        '200':
          description: user token
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  token:
                    type: string
                  user:
                    type: object
                    additionalProperties: false
                    properties:
                      id:
                        description: Email used to log in.
                        type: string
                      profile:
                        $ref: '#/components/schemas/SimplifiedProfile'
  /resettable:
    post:
      tags:
        - Users
      description: Check if a user is resettable
      operationId: resettable
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
              properties:
                id:
                  type: string
                  minLength: 1
                  maxLength: 254
              additionalProperties: false
      responses:
        '200':
          description: Group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
  /impersonate:
    post:
      tags:
        - Users
      description: Impersonate a user
      operationId: impersonate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - groupId
              properties:
                groupId:
                  type: string
                  minLength: 1
              additionalProperties: false
      responses:
        '200':
          description: User token of the impersonated user and details of the impersonation.
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  token:
                    type: string
                  user:
                    type: object
                    additionalProperties: false
                    properties:
                      id:
                        description: Email used to log in.
                        type: string
                      profile:
                        $ref: '#/components/schemas/SimplifiedProfile'
                      disallowDataModification:
                        type: boolean
                      impersonatables:
                        type: array
                        items:
                          type: string
                          minLength: 1
                      impersonator:
                        type: object
                        additionalProperties: false
                        properties:
                          id:
                            type: string
                          isSuperUser:
                            type: boolean
                          isVenueid:
                            type: boolean
                          profile:
                            $ref: '#/components/schemas/SimplifiedProfile'
                          impersonator:
                            type: object
                            additionalProperties: false
                            properties:
                              id:
                                type: string
                              isSuperUser:
                                type: boolean
                              isVenueid:
                                type: boolean
                              profile:
                                $ref: '#/components/schemas/SimplifiedProfile'
  /tildeusername:
    get:
      tags:
        - Users
      description: Gets the next available OpenReview username for the passed names.
      operationId: tildeUsername
      parameters:
        - name: first
          in: query
          description: first name
          schema:
            type: string
        - name: middle
          in: query
          description: middle name
          schema:
            type: string
        - name: last
          in: query
          description: last name
          schema:
            type: string
        - name: fullname
          in: query
          description: full name
          schema:
            type: string
            minLength: 1
      responses:
        '200':
          description: Next available tilde username
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  username:
                    type: string
  /user/confirm:
    post:
      tags:
        - Users
      description: Confirm a new email
      operationId: confirm
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - alternate
              properties:
                username:
                  type: string
                  minLength: 1
                alternate:
                  type: string
                  minLength: 1
                  maxLength: 254
              additionalProperties: false
      responses:
        '200':
          description: user email
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  alternate:
                    type: string
  /attachment:
    put:
      tags:
        - Attachments
      description: Upload an attachment
      operationId: uploadAttachment
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
                - name
                - invitationId
              additionalProperties: false
              properties:
                file:
                  type: string
                  format: binary
                name:
                  description: Attachment field name. This is usually pdf or supplementary_material.
                  type: string
                  minLength: 1
                invitationId:
                  description: The id of the Invitation that allows to upload the attachment.
                  type: string
                  minLength: 1
      responses:
        '200':
          description: Path to the attachment.
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  url:
                    type: string
    get:
      tags:
        - Attachments
      description: Download an attachment
      operationId: getAttachment
      parameters:
        - name: id
          in: query
          description: Note id that contains the attachment.
          schema:
            type: string
            minLength: 1
        - name: ids
          in: query
          description: Note ids that contain the attachments.
          schema:
            anyOf:
              - type: string
                minLength: 1
              - type: array
                items:
                  type: string
                  minLength: 1
        - name: name
          in: query
          description: Attachment field name inside the content of the Note. This is usually pdf or supplementary_material.
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        '200':
          description: Attachment
  /attachment/chunk:
    put:
      tags:
        - Attachments
      description: Upload an attachment chunk
      operationId: uploadAttachmentChunk
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - file
                - name
                - invitationId
                - clientUploadId
                - chunkIndex
                - totalChunks
              additionalProperties: false
              properties:
                file:
                  type: string
                  format: binary
                name:
                  description: Attachment field name. This is usually pdf or supplementary_material.
                  type: string
                  minLength: 1
                invitationId:
                  description: The id of the Invitation that allows to upload the attachment.
                  type: string
                  minLength: 1
                clientUploadId:
                  description: Unique id that identifies all the chunks to the same file.
                  type: string
                  minLength: 1
                  maxLength: 25
                chunkIndex:
                  description: The index of the chunk.
                  type: integer
                  minimum: 0
                totalChunks:
                  description: The total number of chunks.
                  type: integer
                  minimum: 1
      responses:
        '200':
          description: Path to the attachment.
          content:
            application/json:
              schema:
                anyOf:
                  - type: object
                    additionalProperties: false
                    properties:
                      url:
                        type: string
                  - type: object
                    additionalProperties:
                      type: string
                      enum:
                        - missing
                        - completed
  /pdf:
    get:
      tags:
        - Attachments
      description: Download a PDF
      operationId: getPdf
      parameters:
        - name: id
          in: query
          description: Note id that contains the PDF.
          schema:
            type: string
            minLength: 1
        - name: ids
          in: query
          description: Note ids that contain the attachments.
          schema:
            anyOf:
              - type: string
                minLength: 1
              - type: array
                items:
                  type: string
                  minLength: 1
      responses:
        '200':
          description: PDF
  /pdf/{id}:
    get:
      tags:
        - Attachments
      description: Get a PDF
      operationId: getPdfHash
      parameters:
        - name: id
          in: path
          description: PDF id. This is the value saved in the pdf field of the Note.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: pdf
  /pdf/compare:
    get:
      tags:
        - Attachments
      description: Compare PDFs
      operationId: comparePdfs
      parameters:
        - name: noteId
          in: query
          description: Note id
          required: true
          schema:
            type: string
        - name: leftId
          in: query
          description: Edit id
          required: true
          schema:
            type: string
        - name: rightId
          in: query
          description: Edit id
          required: true
          schema:
            type: string
        - name: field
          in: query
          description: field to compare
          required: false
          schema:
            type: string
            default: pdf
      responses:
        '200':
          description: pdf comparison
  /edges:
    get:
      tags:
        - Edges
      description: Get edges
      operationId: getEdges
      parameters:
        - name: id
          in: query
          description: Edge id
          schema:
            type: string
            minLength: 1
        - name: limit
          in: query
          description: Maximum number of results to return.
          schema:
            type: integer
            minimum: 1
        - name: offset
          in: query
          description: Offset of the result shown.
          schema:
            type: integer
            minimum: 0
        - name: after
          in: query
          description: Return documents that come after the after parameter. After should be an id.
          schema:
            type: string
            minLength: 1
        - name: sort
          in: query
          description: Sort returned Edges by field.
          schema:
            type: string
            minLength: 1
        - name: invitation
          in: query
          description: Invitation id used to create the Edge(s).
          schema:
            type: string
            minLength: 1
        - name: head
          in: query
          description: head value of the Edge(s).
          schema:
            type: string
            minLength: 1
        - name: tail
          in: query
          description: tail value of the Edge(s).
          schema:
            type: string
            minLength: 1
        - name: label
          in: query
          description: label of the Edge(s).
          schema:
            type: string
            minLength: 1
        - name: trash
          in: query
          description: Whether to return deleted Edges as well.
          schema:
            type: boolean
        - name: groupBy
          in: query
          description: Group result by different Edge fields.
          schema:
            type: string
            minLength: 1
        - name: select
          in: query
          description: Fields of the Edge to return in the result. Requires groupBy.
          schema:
            anyOf:
              - type: string
                minLength: 1
                pattern: '[a-zA-Z0-9_]+'
              - type: array
                items:
                  type: string
                  minLength: 1
                  pattern: '[a-zA-Z0-9_]+'
        - name: details
          in: query
          description: Comma separated values of fields to add to details. Valid values are head, tail, writable and all.
          schema:
            example: 'head,tail'
            type: string
            minLength: 1
        - name: cache
          in: query
          description: Get result from cache. Without the right privileges this parameter will be ignored.
          schema:
            type: boolean
        - name: domain
          in: query
          description: Domain the Edges belong to to filter transitive members.
          schema:
            type: string
            minLength: 1
      responses:
        '200':
          description: edges
          content:
            application/json:
              schema:
                type: object
                properties:
                  edges:
                    type: array
                    items:
                      $ref: '#/components/schemas/Edge'
                  count:
                    type: integer
                    minimum: 0
                  cache:
                    type: boolean
                  groupedEdges:
                    type: array
                    items:
                      type: object
                      additionalProperties: false
                      properties:
                        id:
                          type: object
                        count:
                          type: integer
                          minimum: 0
                        values:
                          type: array
                          items:
                            type: object
                additionalProperties: false
    post:
      tags:
        - Edges
      description: Create an edge
      operationId: createEdge
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edge'
      responses:
        '200':
          description: Edge
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edge'
  /edges/rename:
    post:
      tags:
        - Edges
      description: Rename an edge
      operationId: renameEdge
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - currentId
                - newId
              properties:
                currentId:
                  type: string
                  minLength: 1
                newId:
                  type: string
                  minLength: 1
              additionalProperties: false
      responses:
        '200':
          description: edge
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Edge'
  /edges/count:
    get:
      tags:
        - Edges
      description: Get edges count
      operationId: getEdgesCount
      parameters:
        - name: id
          in: query
          description: Edge id
          schema:
            type: string
            minLength: 1
        - name: invitation
          in: query
          description: Invitation id used to create the Edge(s).
          schema:
            type: string
            minLength: 1
        - name: head
          in: query
          description: head value of the Edge(s).
          schema:
            type: string
            minLength: 1
        - name: tail
          in: query
          description: tail value of the Edge(s).
          schema:
            type: string
            minLength: 1
        - name: label
          in: query
          description: label of the Edge(s).
          schema:
            type: string
            minLength: 1
        - name: trash
          in: query
          description: Whether to return deleted Edges as well.
          schema:
            type: boolean
        - name: domain
          in: query
          description: Domain the Edges belong to to filter transitive members.
          schema:
            type: string
            minLength: 1
      responses:
        '200':
          description: edges
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    type: integer
                    minimum: 0
  /edges/archive:
    get:
      tags:
        - Edges
      description: Get archived edges
      operationId: getArchivedEdges
      parameters:
        - name: invitation
          in: query
          description: Invitation id used to create the Edge(s).
          required: true
          schema:
            type: string
            minLength: 1
      responses:
        '200':
          description: Archived edges
  /feedback:
    put:
      tags:
        - Feedback
      description: Send feedback to the OpenReview team
      operationId: sendFeedback
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - message
                - from
                - token
              properties:
                from:
                  description: Email address of the user sending the feedback.
                  type: string
                  minLength: 1
                subject:
                  description: Subject of the feedback.
                  type: string
                message:
                  description: The feedback.
                  type: string
                  minLength: 1
                token:
                  description: Turnstile token.
                  type: string
              additionalProperties: false
      responses:
        '200':
          description: feedback
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  status:
                    type: string
  /profiles:
    get:
      tags:
        - Profiles
      description: Get user profiles
      operationId: getProfiles
      parameters:
        - name: id
          in: query
          description: Profile id
          schema:
            type: string
            minLength: 1
            pattern: '^~.*\d+$'
        - name: ids
          in: query
          description: Profile ids
          schema:
            anyOf:
              - type: string
              - type: array
                items:
                  type: string
                  minLength: 1
                  pattern: '^~.*\d+$'
        - name: email
          in: query
          description: Email associated with the Profile.
          schema:
            type: string
            minLength: 1
        - name: emails
          in: query
          description: Email(s) associated with the Profile.
          schema:
            anyOf:
              - type: string
              - type: array
                items:
                  type: string
                  minLength: 1
        - name: confirmedEmail
          in: query
          description: Confirmed email associated with the Profile.
          schema:
            type: string
            minLength: 1
        - name: confirmedEmails
          in: query
          description: Confirmed email(s) associated with the Profile.
          schema:
            anyOf:
              - type: string
              - type: array
                items:
                  type: string
                  minLength: 1
        - name: first
          in: query
          description: First name associated with the Profile.
          schema:
            type: string
            minLength: 1
        - name: middle
          in: query
          description: Middle name associated with the Profile.
          schema:
            type: string
            nullable: true
        - name: last
          in: query
          description: Last name associated with the Profile.
          schema:
            type: string
            minLength: 1
        - name: term
          in: query
          description: Email, Fullname or part of the fullname associated with the Profile.
          schema:
            type: string
            minLength: 1
        - name: relation
          in: query
          description: Relation associated to the Profile.
          schema:
            type: string
            minLength: 1
        - name: dblp
          in: query
          description: dblp link associated to the Profile.
          schema:
            type: string
            minLength: 1
        - name: group
          in: query
          description: Group id where to get all the member profiles.
          schema:
            type: string
            minLength: 1
        - name: trash
          in: query
          description: Whether to include deleted profiles.
          schema:
            type: boolean
        - name: withBlocked
          in: query
          description: Whether to include blocked profiles.
          schema:
            type: boolean
        - name: needsModeration
          in: query
          description: Whether to return Profiles that need moderation.
          schema:
            type: boolean
        - name: select
          in: query
          description: Comma separated string with specific fields of the Profile object to return.
          schema:
            example: id,content.names,content.emails
            type: string
            minLength: 1
        - name: state
          in: query
          description: State of the Profile.
          schema:
            type: string
            enum:
              - Inactive
              - Needs Moderation
              - Active Institutional
              - Active Automatic
              - Active
              - Blocked
              - Limited
              - Merged
              - Rejected
        - name: sort
          in: query
          description: Sort returned Profiles by field.
          schema:
            type: string
            minLength: 1
        - name: limit
          in: query
          description: Maximum number of results to return.
          schema:
            type: integer
            minimum: 1
        - name: offset
          in: query
          description: Offset of the result shown.
          schema:
            type: integer
            minimum: 0
        - name: after
          in: query
          description: Return documents that come after the after parameter. After should be an id.
          schema:
            type: string
            minLength: 1
        - name: cache
          in: query
          description: Get result from cache. Without the right privileges this parameter will be ignored.
          schema:
            type: boolean
      responses:
        '200':
          description: Profile response
          content:
            application/json:
              schema:
                type: object
                properties:
                  profiles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Profile'
                  count:
                    type: integer
                    minimum: 0
                  fromCache:
                    type: boolean
                additionalProperties: false
    post:
      tags:
        - Profiles
      description: Save user Profile
      operationId: saveProfile
      requestBody:
        description: Add a new piece of evidence to an existent Profile.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileReference'
      responses:
        '200':
          description: Profile response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
  /profiles/search:
    get:
      tags:
        - Profiles
      description: Get user profiles
      operationId: searchProfiles
      parameters:
        - name: id
          in: query
          description: Profile id
          schema:
            type: string
            minLength: 1
            pattern: '^~.*\d+$'
        - name: ids
          in: query
          description: Profile ids
          schema:
            anyOf:
              - type: string
              - type: array
                items:
                  type: string
                  minLength: 1
                  pattern: '^~.*\d+$'
        - name: email
          in: query
          description: Email associated with the Profile.
          schema:
            type: string
            minLength: 1
        - name: emails
          in: query
          description: Email(s) associated with the Profile.
          schema:
            anyOf:
              - type: string
              - type: array
                items:
                  type: string
                  minLength: 1
        - name: confirmedEmail
          in: query
          description: Confirmed email associated with the Profile.
          schema:
            type: string
            minLength: 1
        - name: confirmedEmails
          in: query
          description: Confirmed email(s) associated with the Profile.
          schema:
            anyOf:
              - type: string
              - type: array
                items:
                  type: string
                  minLength: 1
        - name: first
          in: query
          description: First name associated with the Profile.
          schema:
            type: string
            minLength: 1
        - name: middle
          in: query
          description: Middle name associated with the Profile.
          schema:
            type: string
            nullable: true
        - name: last
          in: query
          description: Last name associated with the Profile.
          schema:
            type: string
            minLength: 1
        - name: fullname
          in: query
          description: Fullname associated with the Profile.
          schema:
            type: string
            minLength: 1
        - name: es
          in: query
          description: Whether to use ElasticSearch to search for profiles.
          schema:
            type: boolean
        - name: term
          in: query
          description: Email, Fullname or part of the fullname associated with the Profile.
          schema:
            type: string
            minLength: 1
        - name: group
          in: query
          description: Group id where to get all the member profiles.
          schema:
            type: string
            minLength: 1
        - name: trash
          in: query
          description: Whether to include deleted profiles.
          schema:
            type: boolean
        - name: withBlocked
          in: query
          description: Whether to include blocked profiles.
          schema:
            type: boolean
        - name: needsModeration
          in: query
          description: Whether to return Profiles that need moderation.
          schema:
            type: boolean
        - name: select
          in: query
          description: Comma separated string with specific fields of the Profile object to return.
          schema:
            example: id,content.names,content.emails
            type: string
            minLength: 1
        - name: state
          in: query
          description: State of the Profile.
          schema:
            type: string
            enum:
              - Inactive
              - Needs Moderation
              - Active Institutional
              - Active Automatic
              - Active
              - Blocked
              - Limited
              - Merged
              - Rejected
        - name: sort
          in: query
          description: Sort returned Profiles by field.
          schema:
            type: string
            minLength: 1
        - name: limit
          in: query
          description: Maximum number of results to return.
          schema:
            type: integer
            minimum: 1
        - name: offset
          in: query
          description: Offset of the result shown.
          schema:
            type: integer
            minimum: 0
        - name: cache
          in: query
          description: Get result from cache. Without the right privileges this parameter will be ignored.
          schema:
            type: boolean
      responses:
        '200':
          description: Profile response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  profiles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Profile'
                  count:
                    type: integer
                    minimum: 0
                  fromCache:
                    type: boolean
    post:
      tags:
        - Profiles
      description: Get user profiles
      operationId: searchProfilesES
      parameters:
        - name: id
          in: query
          description: Profile id
          schema:
            type: string
            minLength: 1
            pattern: '^~.*\d+$'
        - name: ids
          in: query
          description: Profile ids
          schema:
            anyOf:
              - type: string
              - type: array
                items:
                  type: string
                  minLength: 1
                  pattern: '^~.*\d+$'
        - name: email
          in: query
          description: Email associated with the Profile.
          schema:
            type: string
            minLength: 1
        - name: emails
          in: query
          description: Email(s) associated with the Profile.
          schema:
            anyOf:
              - type: string
              - type: array
                items:
                  type: string
                  minLength: 1
        - name: confirmedEmail
          in: query
          description: Confirmed email associated with the Profile.
          schema:
            type: string
            minLength: 1
        - name: confirmedEmails
          in: query
          description: Confirmed email(s) associated with the Profile.
          schema:
            anyOf:
              - type: string
              - type: array
                items:
                  type: string
                  minLength: 1
        - name: first
          in: query
          description: First name associated with the Profile.
          schema:
            type: string
            minLength: 1
        - name: middle
          in: query
          description: Middle name associated with the Profile.
          schema:
            type: string
            nullable: true
        - name: last
          in: query
          description: Last name associated with the Profile.
          schema:
            type: string
            minLength: 1
        - name: term
          in: query
          description: Email, Fullname or part of the fullname associated with the Profile.
          schema:
            type: string
            minLength: 1
        - name: group
          in: query
          description: Group id where to get all the member profiles.
          schema:
            type: string
            minLength: 1
        - name: trash
          in: query
          description: Whether to include deleted profiles.
          schema:
            type: boolean
        - name: withBlocked
          in: query
          description: Whether to include blocked profiles.
          schema:
            type: boolean
        - name: needsModeration
          in: query
          description: Whether to return Profiles that need moderation.
          schema:
            type: boolean
        - name: select
          in: query
          description: Comma separated string with specific fields of the Profile object to return.
          schema:
            example: id,content.names,content.emails
            type: string
            minLength: 1
        - name: state
          in: query
          description: State of the Profile.
          schema:
            type: string
            enum:
              - Inactive
              - Needs Moderation
              - Active Institutional
              - Active Automatic
              - Active
              - Blocked
              - Limited
              - Merged
              - Rejected
        - name: sort
          in: query
          description: Sort returned Profiles by field.
          schema:
            type: string
            minLength: 1
        - name: limit
          in: query
          description: Maximum number of results to return.
          schema:
            type: integer
            minimum: 1
        - name: offset
          in: query
          description: Offset of the result shown.
          schema:
            type: integer
            minimum: 0
        - name: after
          in: query
          description: Return documents that come after the after parameter. After should be an id.
          schema:
            type: string
            minLength: 1
        - name: cache
          in: query
          description: Get result from cache. Without the right privileges this parameter will be ignored.
          schema:
            type: boolean
      responses:
        '200':
          description: Profile response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  profiles:
                    type: array
                    items:
                      $ref: '#/components/schemas/Profile'
                  count:
                    type: integer
                    minimum: 0
                  fromCache:
                    type: boolean
  /references:
    get:
      tags:
        - References
      description: Gets profile references
      operationId: getReferences
      parameters:
        - name: id
          in: query
          description: Group id.
          schema:
            type: string
            minLength: 1
        - name: ids
          in: query
          description: Group ids.
          schema:
            anyOf:
              - type: string
              - type: array
                items:
                  type: string
                  minLength: 1
        - name: referent
          in: query
          description: Profile id that the reference is modifying.
          schema:
            type: string
            minLength: 1
        - name: limit
          in: query
          description: Maximum number of results to return.
          schema:
            type: integer
            minimum: 1
        - name: offset
          in: query
          description: Offset of the result shown.
          schema:
            type: integer
            minimum: 0
        - name: after
          in: query
          description: Return documents that come after the after parameter. After should be an id.
          schema:
            type: string
            minLength: 1
        - name: sort
          in: query
          description: Select field to sort by.
          schema:
            type: string
            minLength: 1
      responses:
        '200':
          description: The Profile that is saved to the database.
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    type: integer
                    minimum: 0
                  references:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProfileReference'
                  fromCache:
                    type: boolean
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /groups:
    get:
      tags:
        - Groups
      description: Returns groups
      operationId: getGroups
      parameters:
        - name: id
          in: query
          description: Group id.
          schema:
            type: string
            minLength: 1
        - name: ids
          in: query
          description: Group ids.
          schema:
            anyOf:
              - type: string
              - type: array
                items:
                  type: string
                  minLength: 1
        - name: prefix
          in: query
          description: Group id prefix.
          schema:
            type: string
            minLength: 1
        - name: parent
          in: query
          description: Group parent.
          schema:
            type: string
            minLength: 1
        - name: member
          in: query
          description: Group id to get its transitive members.
          schema:
            type: string
            minLength: 1
        - name: members
          in: query
          description: Group id to get groups that the Group is member of.
          schema:
            type: string
            minLength: 1
        - name: signature
          in: query
          description: Group id used to sign the returned Groups.
          schema:
            type: string
            minLength: 1
        - name: signatory
          in: query
          description: Group id that can is allowed to sign with the returned Groups.
          schema:
            type: string
            minLength: 1
        - name: writer
          in: query
          description: Group id that is writer of the returned Groups.
          schema:
            type: string
            minLength: 1
        - name: host
          in: query
          description: Host of the returned Groups.
          schema:
            type: string
            nullable: true
            minLength: 1
        - name: select
          in: query
          description: Comma separated string with specific fields of the Group object to return.
          schema:
            example: id,members
            type: string
            minLength: 1
        - name: details
          in: query
          description: Comma separated values of fields to add to details. Valid value is writable.
          schema:
            example: writable
            type: string
            minLength: 1
        - name: limit
          in: query
          description: Maximum number of results to return.
          schema:
            type: integer
            minimum: 1
        - name: offset
          in: query
          description: Offset of the result shown.
          schema:
            type: integer
            minimum: 0
        - name: after
          in: query
          description: Return documents that come after the after parameter. After should be an id.
          schema:
            type: string
            minLength: 1
        - name: sort
          in: query
          description: Select field to sort by.
          schema:
            type: string
            minLength: 1
        - name: web
          in: query
          description: Whether to return web ui code
          schema:
            type: boolean
        - name: stream
          in: query
          description: Whether to use a stream to process results or not.
          schema:
            type: boolean
        - name: cache
          in: query
          description: Get result from cache. Without the right privileges this parameter will be ignored.
          schema:
            type: boolean
        - name: domain
          in: query
          description: Domain the Groups belong to to filter transitive members.
          schema:
            type: string
            minLength: 1
      responses:
        '200':
          description: Group response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    type: integer
                    minimum: 0
                  groups:
                    type: array
                    items:
                      $ref: '#/components/schemas/Group'
                  fromCache:
                    type: boolean
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /groups/members:
    put:
      tags:
        - Groups
      description: Adds members to a Group
      operationId: addMembersToGroup
      requestBody:
        description: Group object
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - members
              properties:
                id:
                  description: Group id to which memebers will be added.
                  type: string
                  minLength: 1
                members:
                  description: Members to add to the Group.
                  type: array
                  minItems: 1
                  items:
                    type: string
                    minLength: 1
              additionalProperties: false
      responses:
        '200':
          description: Group response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /groups/edits:
    get:
      tags:
        - GroupEdits
      description: Returns all the Group Edits by filter.
      operationId: getGroupEdits
      parameters:
        - name: id
          in: query
          description: Edit id.
          schema:
            type: string
            minLength: 1
        - name: ids
          in: query
          description: Edit ids.
          schema:
            anyOf:
              - type: string
              - type: array
                items:
                  type: string
                  minLength: 1
        - name: group.id
          in: query
          description: Group id that the Edits have edited.
          schema:
            type: string
            minLength: 1
        - name: invitation
          in: query
          description: Invitation id used to create the Edit(s).
          schema:
            type: string
            minLength: 1
        - name: trash
          in: query
          description: Whether to get deleted Group Edits.
          schema:
            type: boolean
        - name: tauthor
          in: query
          description: Get Edits authored by user.
          schema:
            type: boolean
        - name: writer
          in: query
          description: Get Edits written by user.
          schema:
            type: string
            minLength: 1
        - name: signatures
          in: query
          description: Get Edits signed by users.
          schema:
            anyOf:
              - type: string
              - type: array
                items:
                  type: string
                  minLength: 1
        - name: select
          in: query
          description: Comma separated string with specific fields of the Note Edit object to return.
          schema:
            example: 'id,content.title,content.abstract'
            type: string
            minLength: 1
        - name: details
          in: query
          description: |
            Comma separated values of fields to add to details. Valid values are
            writable, invitation, and all
          schema:
            type: string
            minLength: 1
            example: all
        - name: sort
          in: query
          description: Sort returned Edits by field.
          schema:
            type: string
            minLength: 1
        - name: limit
          in: query
          description: Maximum number of results to return.
          schema:
            type: integer
        - name: offset
          in: query
          description: Offset of the result shown.
          schema:
            type: integer
        - name: cache
          in: query
          description: Get result from cache. Without the right privileges this parameter will be ignored.
          schema:
            type: boolean
        - name: domain
          in: query
          description: Domain the Group Edits belong to to filter transitive members.
          schema:
            type: string
            minLength: 1
      responses:
        '200':
          description: Edit Group response
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    minimum: 0
                  edits:
                    type: array
                    items:
                      $ref: '#/components/schemas/GroupEditGet'
                  fromCache:
                    type: boolean
                additionalProperties: false
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - GroupEdits
      description: Create or edit a Group Edit
      operationId: createGroupEdit
      requestBody:
        description: Group Edit object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupEditPost'
      responses:
        '200':
          description: Group Edit response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupEditGet'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /notes/edits:
    get:
      tags:
        - NoteEdits
      description: Returns all the Note Edits by filter.
      operationId: getNoteEdits
      parameters:
        - name: id
          in: query
          description: Edit id.
          schema:
            type: string
            minLength: 1
        - name: ids
          in: query
          description: Edit ids.
          schema:
            anyOf:
              - type: string
              - type: array
                items:
                  type: string
                  minLength: 1
        - name: note.id
          in: query
          description: Note id that the Edits have edited.
          schema:
            type: string
            minLength: 1
        - name: invitation
          in: query
          description: Invitation id used to create the Edit(s).
          schema:
            type: string
            minLength: 1
            example: ICLR.cc/2018/Conference/-/Blind_Submission
        - name: domain
          in: query
          description: Domain of the Edits.
          schema:
            type: string
            minLength: 1
        - name: trash
          in: query
          description: Whether to get deleted Note Edits.
          schema:
            type: boolean
        - name: tauthor
          in: query
          description: Get Edits authored by user.
          schema:
            type: boolean
        - name: writer
          in: query
          description: Get Edits written by user.
          schema:
            type: string
            minLength: 1
        - name: signatures
          in: query
          description: Get Edits signed by users.
          schema:
            anyOf:
              - type: string
              - type: array
                items:
                  type: string
                  minLength: 1
        - name: original
          in: query
          description: get Edits that are originals
          schema:
            anyOf:
              - type: boolean
              - type: string
                minLength: 1
        - name: select
          in: query
          description: Comma separated string with specific fields of the Note Edit object to return.
          schema:
            example: 'id,content.title,content.abstract'
            type: string
            minLength: 1
        - name: details
          in: query
          description: |
            Comma separated values of fields to add to details. Valid values are:
            replyCount: Number of replies in a forum. Only available if the Note is a forum.
            writable: Boolean indicating whether the Note is writable by the user.
            originalWritable: Boolean indicating whether the original Note is writable by the user.
            tags: Tags of the Note.
            invitations: Invitations of the Note.
            directReplyCount: Number of direct replies to the Note.
            directReplies: Direct replies to the Note.
            replies: Replies to the Note. Only available if the Note is a forum.
            forumContent: Content of the forum Note. Only available if the Note is a reply.
            presentation: Shows how to render the content of the Note.
            signatures: Returns members and readers of the signatures of the Note.
          schema:
            type: string
            minLength: 1
            example: all
        - name: sort
          in: query
          description: Sort returned Edits by field.
          schema:
            type: string
            minLength: 1
        - name: limit
          in: query
          description: Maximum number of results to return.
          schema:
            type: integer
        - name: offset
          in: query
          description: Offset of the result shown.
          schema:
            type: integer
            minimum: 0
        - name: after
          in: query
          description: Return documents that come after the after parameter. After should be an id.
          schema:
            type: string
            minLength: 1
        - name: cache
          in: query
          description: Get result from cache. Without the right privileges this parameter will be ignored.
          schema:
            type: boolean
        - name: domain
          in: query
          description: Domain the Note Edits belong to to filter transitive members.
          schema:
            type: string
            minLength: 1
      responses:
        '200':
          description: Edit Note response
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    minimum: 0
                  edits:
                    type: array
                    items:
                      $ref: '#/components/schemas/NoteEditGet'
                  fromCache:
                    type: boolean
                additionalProperties: false
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - NoteEdits
      description: Create or edit a Note Edit
      operationId: createNoteEdit
      requestBody:
        description: Note Edit object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteEditPost'
      responses:
        '200':
          description: Note Edit response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteEditGet'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /notes:
    get:
      tags:
        - Notes
      description: Returns all the Notes by filter.
      operationId: getNotes
      parameters:
        - name: id
          in: query
          description: Note id.
          schema:
            type: string
            minLength: 1
        - name: ids
          in: query
          description: Note ids.
          schema:
            anyOf:
              - type: string
              - type: array
                items:
                  type: string
                  minLength: 1
        - name: invitation
          in: query
          description: Invitation id used to create the Note(s).
          schema:
            type: string
            minLength: 1
            example: ICLR.cc/2018/Conference/-/Blind_Submission
        - name: invitations
          in: query
          description: Invitation ids.
          schema:
            anyOf:
              - type: string
              - type: array
                items:
                  type: string
                  minLength: 1
        - name: forum
          in: query
          description: Note id of the forum field.
          schema:
            anyOf:
              - type: string
              - type: array
                items:
                  type: string
                  minLength: 1
        - name: replyto
          in: query
          description: Note id of the replyto field.
          schema:
            anyOf:
              - type: string
              - type: array
                items:
                  type: string
                  minLength: 1
        - name: number
          in: query
          description: Note number.
          schema:
            anyOf:
              - type: integer
                minimum: 1
              - type: string
                minLength: 1
                pattern: '^([1-9][0-9]*,?)*[1-9][0-9]*$'
              - type: array
                minItems: 1
                items:
                  type: integer
                  minimum: 1
        - name: content.title
          in: query
          description: Note title.
          schema:
            type: string
            minLength: 1
        - name: content.confidence
          in: query
          description: Note content confidence field value.
          schema:
            type: string
            minLength: 1
        - name: content.strengths
          in: query
          description: Note content strengths field value.
          schema:
            type: string
            minLength: 1
        - name: content.weaknesses
          in: query
          description: Note content weaknesses field value.
          schema:
            type: string
            minLength: 1
        - name: content.decision
          in: query
          description: Note content decision field value.
          schema:
            type: string
            minLength: 1
        - name: content.certifications
          in: query
          description: Note content certification field values.
          schema:
            type: string
            minLength: 1
        - name: content.previous_URL
          in: query
          description: Note content previous_URL field value.
          schema:
            type: string
            minLength: 1
        - name: content.user
          in: query
          description: User email in recruitment.
          schema:
            type: string
            minLength: 1
        - name: content.response
          in: query
          description: User response in recruitment.
          schema:
            type: string
            minLength: 1
        - name: content.submission_id
          in: query
          schema:
            type: string
            minLength: 1
        - name: content.venue
          in: query
          description: Note venue.
          schema:
            type: string
            minLength: 1
        - name: content.venueid
          in: query
          description: Note venueid.
          schema:
            type: string
            minLength: 1
        - name: content.venue_id
          in: query
          description: Note venue_id.
          schema:
            type: string
            minLength: 1
        - name: content.presentation_type
          in: query
          description: Presentation Type.
          schema:
            type: string
            minLength: 1
        - name: content.sessions
          in: query
          description: Sessions.
          schema:
            type: string
            minLength: 1
        - name: content.track
          in: query
          description: Track.
          schema:
            type: string
            minLength: 1
        - name: content.authorids
          in: query
          description: List of tilde ids of registered users or of emails either registered or not.
          schema:
            anyOf:
              - type: string
                example: ~Andrew_McCallum1
              - type: array
                items:
                  type: string
                  minLength: 1
        - name: trash
          in: query
          description: Whether to get deleted Notes.
          schema:
            type: boolean
        - name: paperhash
          in: query
          description: paperhash of the Note if exists.
          deprecated: true
          schema:
            type: string
            example: das|go_for_a_walk_and_arrive_at_the_answer_reasoning_over_paths_in_knowledge_bases_using_reinforcement_learning.
        - name: tauthor
          in: query
          description: Get Notes authored by user.
          schema:
            type: boolean
        - name: writer
          in: query
          description: Get Notes written by user.
          schema:
            type: string
            minLength: 1
        - name: signature
          in: query
          description: Get Notes signed by user.
          schema:
            type: string
            minLength: 1
        - name: transitiveMembers
          in: query
          description: Include transitive members of signature if it's passed as a parameter.
          schema:
            type: boolean
        - name: signatures
          in: query
          description: Get Notes signed by users.
          schema:
            anyOf:
              - type: string
              - type: array
                items:
                  type: string
                  minLength: 1
        - name: original
          in: query
          description: get Notes that are originals
          schema:
            anyOf:
              - type: boolean
              - type: string
                minLength: 1
        - name: select
          in: query
          description: Comma separated string with specific fields of the Note object to return.
          schema:
            example: 'id,content.title,content.abstract'
            type: string
            minLength: 1
        - name: details
          in: query
          description: |
            Comma separated values of fields to add to details. Valid values are
            replyCount, original, overwriting, revisions, writable, forumContent, tags, revisions, invitation, directReplyCount, directReplies, replies, and all
          schema:
            type: string
            minLength: 1
            example: all
        - name: invitee
          in: query
          description: invitee
          schema:
            type: boolean
        - name: mintcdate
          in: query
          description: minimum creation date
          schema:
            type: integer
            minimum: 0
        - name: mintmdate
          in: query
          description: minimum modification date
          schema:
            type: integer
            minimum: 0
        - name: duedate
          in: query
          description: due date
          schema:
            type: boolean
        - name: sort
          in: query
          description: Sort returned Notes by field.
          schema:
            type: string
            minLength: 1
        - name: limit
          in: query
          description: Maximum number of results to return.
          schema:
            type: integer
        - name: offset
          in: query
          description: Offset of the result shown.
          schema:
            type: integer
            minimum: 0
        - name: after
          in: query
          description: Return documents that come after the after parameter. After should be an id.
          schema:
            type: string
            minLength: 1
        - name: cache
          in: query
          description: Get result from cache. Without the right privileges this parameter will be ignored.
          schema:
            type: boolean
        - name: domain
          in: query
          description: Domain the Notes belong to to filter transitive members.
          schema:
            type: string
            minLength: 1
      responses:
        '200':
          description: Note response
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    minimum: 0
                  notes:
                    type: array
                    items:
                      $ref: '#/components/schemas/Note'
                  fromCache:
                    type: boolean
                additionalProperties: false
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /notes/search:
    get:
      tags:
        - Notes
      description: Search Notes
      operationId: searchNotes
      parameters:
        - name: query
          in: query
          description: Search query that that looks inside some of the fields in the content of the Note.
          schema:
            type: string
            minLength: 1
        - name: term
          in: query
          description: Search term that that looks inside some of the fields in the content of the Note.
          schema:
            type: string
            minLength: 1
        - name: terms
          in: query
          description: Search term that that looks inside some of the fields in the content of the Note.
          schema:
            type: array
            minItems: 1
            items:
              type: string
              minLength: 1
        - name: type
          in: query
          description: Search type
          schema:
            type: string
            enum:
              - prefix
              - terms
              - exact
        - name: content
          in: query
          description: Fields inside content to look for the term.
          schema:
            type: string
            enum:
              - title
              - abstract
              - authors
              - authorids
              - comment
              - review
              - paperhash
              - confidence
              - summary
              - main_review
              - metareview
              - strengths
              - weaknesses
              - TL;DR
              - decision
              - recommendation
              - venueid
              - venue
              - keywords
              - subject_areas
              - all
            default: all
        - name: group
          in: query
          description: Group that the Invitation belongs to
          schema:
            type: string
            minLength: 1
        - name: source
          in: query
          description: Source of the Note
          schema:
            type: string
            default: all
            enum:
              - forum
              - reply
              - all
        - name: invitation
          in: query
          description: Invitation id used to create the Note(s).
          schema:
            type: string
            minLength: 1
            example: ICLR.cc/2018/Conference/-/Submission
        - name: venue
          in: query
          description: Venue of the Note
          schema:
            type: string
            minLength: 1
        - name: venueid
          in: query
          description: Venue id of the Note
          schema:
            type: string
            minLength: 1
        - name: sort
          in: query
          description: Sort returned Notes by field.
          schema:
            type: string
            minLength: 1
            example: tmdate:desc
        - name: limit
          in: query
          description: Maximum number of results to return.
          schema:
            type: integer
        - name: offset
          in: query
          description: Offset of the result shown.
          schema:
            type: integer
        - name: cache
          in: query
          description: Get result from cache. Without the right privileges this parameter will be ignored.
          schema:
            type: boolean
        - name: domain
          in: query
          description: Domain the Notes belong to to filter transitive members.
          schema:
            type: string
            minLength: 1
      responses:
        '200':
          description: Note response
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    minimum: 0
                  notes:
                    type: array
                    items:
                      $ref: '#/components/schemas/Note'
                  fromCache:
                    type: boolean
                additionalProperties: false
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Notes
      description: Search Notes Post
      operationId: searchNotesPost
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  description: Note ids.
                  type: array
                  items:
                    type: string
                    minLength: 1
                query:
                  description: Search query that that looks inside some of the fields in the content of the Note.
                  type: string
                  minLength: 1
                term:
                  type: string
                  minLength: 1
                terms:
                  type: array
                  minItems: 1
                  items:
                    type: string
                    minLength: 1
                type:
                  description: Search type
                  type: string
                  enum:
                    - prefix
                    - terms
                group:
                  description: Group that the Invitation belongs to
                  type: string
                  minLength: 1
                source:
                  description: Source of the Note
                  type: string
                  default: all
                  enum:
                    - forum
                    - reply
                    - all
                invitation:
                  description: Invitation id used to create the Note(s).
                  type: string
                  minLength: 1
                content:
                  description: Fields inside content to look for the term.
                  type: object
                  additionalProperties: false
                  properties:
                    title:
                      type: object
                      required:
                        - terms
                      properties:
                        terms:
                          type: array
                          minItems: 1
                          items:
                            type: string
                            minLength: 1
                        matchMethod:
                          type: string
                          enum:
                            - match
                            - match_phrase
                            - match_phrase_prefix
                            - term
                      additionalProperties: false
                    venue:
                      type: object
                      required:
                        - terms
                      properties:
                        terms:
                          type: array
                          minItems: 1
                          items:
                            type: string
                            minLength: 1
                        matchMethod:
                          type: string
                          enum:
                            - match
                            - match_phrase
                            - match_phrase_prefix
                            - term
                      additionalProperties: false
                venue:
                  description: Venue of the Note
                  type: string
                  minLength: 1
                venueid:
                  description: Venue id of the Note
                  type: string
                  minLength: 1
                domain:
                  description: Domain the Notes belong.
                  type: string
                  minLength: 1
                sort:
                  description: Sort returned Notes by field.
                  type: string
                  minLength: 1
                  example: tmdate:desc
                limit:
                  description: Maximum number of results to return.
                  type: integer
                  minimum: 1
                offset:
                  description: Offset of the result shown.
                  type: integer
                  minimum: 0
                cache:
                  description: Get result from cache. Without the right privileges this parameter will be ignored.
                  type: boolean
              additionalProperties: false
      responses:
        '200':
          description: Note response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    type: integer
                    minimum: 0
                  notes:
                    type: array
                    items:
                      $ref: '#/components/schemas/Note'
                  fromCache:
                    type: boolean
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /invitations/edits:
    get:
      tags:
        - Invitation Edits
      description: Returns Invitation Edits
      operationId: getInvitationEdits
      parameters:
        - name: id
          in: query
          description: Edit id.
          schema:
            type: string
            minLength: 1
        - name: ids
          in: query
          description: Edit ids.
          schema:
            anyOf:
              - type: string
              - type: array
                items:
                  type: string
                  minLength: 1
        - name: invitation.id
          in: query
          description: Invitation id that the Edits have edited.
          schema:
            type: string
            minLength: 1
        - name: invitation
          in: query
          description: Invitation id used to create the Edit(s).
          schema:
            type: string
            minLength: 1
            example: ICLR.cc/2018/Conference/-/Blind_Submission
        - name: trash
          in: query
          description: Whether to get deleted Invitation Edits.
          schema:
            type: boolean
        - name: tauthor
          in: query
          description: Get Edits authored by user.
          schema:
            type: boolean
        - name: writer
          in: query
          description: Get Edits written by user.
          schema:
            type: string
            minLength: 1
        - name: signatures
          in: query
          description: Get Edits signed by users.
          schema:
            anyOf:
              - type: string
              - type: array
                items:
                  type: string
                  minLength: 1
        - name: original
          in: query
          description: get Edits that are originals
          schema:
            anyOf:
              - type: boolean
              - type: string
                minLength: 1
        - name: select
          in: query
          description: Comma separated string with specific fields of the Invitation Edit object to return.
          schema:
            example: 'id,content.title,content.abstract'
            type: string
            minLength: 1
        - name: details
          in: query
          description: |
            Comma separated values of fields to add to details. Valid values are
            writable, invitation, presentation, and all
          schema:
            type: string
            minLength: 1
            example: all
        - name: sort
          in: query
          description: Sort returned Edits by field.
          schema:
            type: string
            minLength: 1
        - name: limit
          in: query
          description: Maximum number of results to return.
          schema:
            type: integer
            minimum: 1
        - name: offset
          in: query
          description: Offset of the result shown.
          schema:
            type: integer
            minimum: 0
        - name: after
          in: query
          description: Return documents that come after the after parameter. After should be an id.
          schema:
            type: string
            minLength: 1
        - name: cache
          in: query
          description: Get result from cache. Without the right privileges this parameter will be ignored.
          schema:
            type: boolean
        - name: domain
          in: query
          description: Domain the Invitation Edits belong to to filter transitive members.
          schema:
            type: string
            minLength: 1
      responses:
        '200':
          description: Invitation response
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    minimum: 0
                  edits:
                    type: array
                    items:
                      $ref: '#/components/schemas/InvitationEditGet'
                  fromCache:
                    type: boolean
                additionalProperties: false
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - InvitationEdits
      description: Create or edit a Invitation Edit
      operationId: createInvitationEdit
      requestBody:
        description: Invitation Edit object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvitationEditPost'
      responses:
        '200':
          description: Invitation Edit response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvitationEditGet'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /invitations:
    get:
      tags:
        - Invitations
      description: Returns Invitations
      operationId: getInvitations
      parameters:
        - name: id
          in: query
          description: Invitation id
          schema:
            type: string
            minLength: 1
        - name: ids
          in: query
          description: Invitation ids
          schema:
            anyOf:
              - type: string
              - type: array
                items:
                  type: string
                  minLength: 1
        - name: invitation
          in: query
          description: Invitation used to validate this invitation.
          schema:
            type: string
            minLength: 1
        - name: prefix
          in: query
          description: Invitation id prefix
          schema:
            type: string
            minLength: 1
        - name: domain
          in: query
          description: Invitation domain
          schema:
            type: string
            minLength: 1
        - name: type
          in: query
          description: Invitation type
          schema:
            type: string
            enum:
              - note
              - notes
              - tag
              - tags
              - edge
              - edges
              - group
              - groups
              - invitation
              - invitations
              - meta
              - all
        - name: replyForum
          in: query
          description: Note id
          schema:
            type: string
            minLength: 1
        - name: replyInvitation
          in: query
          description: Invitation id
          schema:
            type: string
            minLength: 1
        - name: minduedate
          in: query
          description: minimum due date of the Invitation
          schema:
            type: integer
            minimum: 0
        - name: invitee
          in: query
          description: invitee id
          schema:
            anyOf:
              - type: boolean
              - type: string
                minLength: 1
        - name: signature
          in: query
          description: Invitation signature
          schema:
            type: string
            minLength: 1
        - name: replyto
          in: query
          description: Invitations should have replyto field
          schema:
            type: boolean
        - name: duedate
          in: query
          description: Invitations should have due date
          schema:
            type: boolean
        - name: pastdue
          in: query
          description: Invitations should be past due
          schema:
            type: boolean
        - name: expired
          in: query
          description: Invitations should be expired
          schema:
            type: boolean
        - name: select
          in: query
          description: Comma separated string with specific fields of the Invitation object to return.
          schema:
            example: 'id,content,readers,invitees'
            type: string
            minLength: 1
        - name: details
          in: query
          description: Comma separated values of fields to add to details. Valid values are replytoNote, repliedNotes, repliedTags, repliedEdges, all.
          schema:
            type: string
            minLength: 1
        - name: tags
          deprecated: true
          in: query
          description: Get only Tag Invitations
          schema:
            type: boolean
        - name: edges
          deprecated: true
          in: query
          description: Get only edge Invitations
          schema:
            type: boolean
        - name: notes
          deprecated: true
          in: query
          description: Get only Note Invitations
          schema:
            type: boolean
        - name: sort
          in: query
          description: Sort returned Invitations by field.
          schema:
            type: string
            minLength: 1
        - name: limit
          in: query
          description: Maximum number of results to return.
          schema:
            type: integer
            minimum: 1
        - name: offset
          in: query
          description: Offset of the result shown.
          schema:
            type: integer
            minimum: 0
        - name: after
          in: query
          description: Return documents that come after the after parameter. After should be an id.
          schema:
            type: string
            minLength: 1
        - name: cache
          in: query
          description: Get result from cache. Without the right privileges this parameter will be ignored.
          schema:
            type: boolean
        - name: domain
          in: query
          description: Domain the Invitations belong to to filter transitive members.
          schema:
            type: string
            minLength: 1
      responses:
        '200':
          description: Invitation response
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    minimum: 0
                  invitations:
                    type: array
                    items:
                      $ref: '#/components/schemas/Invitation'
                  fromCache:
                    type: boolean
                additionalProperties: false
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /tags:
    get:
      tags:
        - Tags
      description: Find tags by different filters
      operationId: getTags
      parameters:
        - name: id
          in: query
          description: Tag id
          schema:
            type: string
        - name: ids
          in: query
          description: Tag ids
          schema:
            anyOf:
              - type: string
                minLength: 1
              - type: array
                minItems: 1
                items:
                  type: string
                  minLength: 1
        - name: invitation
          in: query
          description: Invitation id used to create the Tag(s).
          schema:
            type: string
            example: ICLR.cc/2018/Conference/-/Add_Bid
        - name: tag
          in: query
          description: Tag value
          schema:
            type: string
            minLength: 1
        - name: signature
          in: query
          description: Tag signature
          schema:
            type: string
            minLength: 1
        - name: forum
          in: query
          description: Note id of the forum field.
          schema:
            type: string
        - name: replyto
          in: query
          description: Invitations should have replyto field
          schema:
            type: string
        - name: trash
          in: query
          description: Get tags deleted too.
          schema:
            type: boolean
        - name: tauthor
          in: query
          description: Get tags authored by user.
          schema:
            type: boolean
        - name: details
          in: query
          description: Comma separated values of fields to add to details. Valid values are forumContent, all.
          schema:
            type: string
            minLength: 1
        - name: limit
          in: query
          description: Maximum number of results to return.
          schema:
            type: integer
            default: 1000
        - name: offset
          in: query
          description: Offset of the result shown.
          schema:
            type: integer
            minimum: 0
        - name: after
          in: query
          description: Return documents that come after the after parameter. After should be an id.
          schema:
            type: string
            minLength: 1
        - name: domain
          in: query
          description: Domain the Tags belong to to filter transitive members.
          schema:
            type: string
            minLength: 1
      responses:
        '200':
          description: Tag response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    type: integer
                    minimum: 0
                  tags:
                    type: array
                    items:
                      $ref: '#/components/schemas/Tag'
                  fromCache:
                    type: boolean
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Tags
      description: Create or edit a Tag
      operationId: createTag
      requestBody:
        description: Tag object
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
            example:
              invitation: ICLR.cc/2018/Conference/-/Add_Bid
              forum: SJeI6e62XQ
              tag: I want to review
              readers:
                - everyone
              signatures:
                - ~Super_User1
      responses:
        '200':
          description: Tag response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /messages:
    get:
      tags:
        - Messages
      description: Find messages by different filters
      operationId: getMessages
      parameters:
        - name: id
          description: Message id.
          in: query
          schema:
            type: string
            minLength: 1
        - name: jobId
          description: Job id used to send Messages.
          in: query
          schema:
            type: string
            minLength: 1
        - name: to
          description: Email address of the recipient.
          in: query
          schema:
            type: string
            minLength: 1
        - name: transitiveMembers
          description: Whether to include transitive members of the group in the to field.
          in: query
          schema:
            type: boolean
        - name: subject
          in: query
          description: Subject of the Message.
          schema:
            type: string
            minLength: 1
        - name: parentGroup
          in: query
          description: Parent Group the recipients belongs to.
          schema:
            type: string
            minLength: 1
        - name: status
          in: query
          description: Status of the message.
          schema:
            anyOf:
              - type: string
                minLength: 1
              - type: array
                items:
                  type: string
                  minLength: 1
        - name: tauthor
          in: query
          description: Email of the author of the message.
          schema:
            type: string
            minLength: 1
        - name: viewed
          in: query
          description: Whether the message has been viewed.
          schema:
            type: boolean
        - name: limit
          in: query
          description: Maximum number of results to return.
          schema:
            type: integer
        - name: offset
          in: query
          description: Offset of the result shown.
          schema:
            type: integer
            minimum: 0
        - name: after
          in: query
          description: Return documents that come after the after parameter. After should be an id.
          schema:
            type: string
            minLength: 1
        - name: cache
          in: query
          description: Get result from cache. Without the right privileges this parameter will be ignored.
          schema:
            type: boolean
      responses:
        '200':
          description: message response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  count:
                    type: integer
                    minimum: 0
                  messages:
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Messages
      description: Create a direct message
      operationId: createMessage
      requestBody:
        description: Message object
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - subject
                - message
                - groups
              properties:
                fromName:
                  description: Name of the sender.
                  type: string
                fromEmail:
                  description: Email of the sender.
                  type: string
                subject:
                  description: Subject of the message.
                  type: string
                message:
                  description: Message body.
                  type: string
                groups:
                  description: Groups the message is sent to.
                  type: array
                  minItems: 1
                  items:
                    type: string
                    minLength: 1
                ignoreGroups:
                  description: Groups the message should not be sent to.
                  type: array
                  nullable: true
                  default: []
                  items:
                    type: string
                    minLength: 1
                parentGroup:
                  description: Parent group that the groups belong to.
                  type: string
                  nullable: true
                invitation:
                  description: Invitation used to validate message
                  type: string
                signature:
                  description: Signature of the message.
                  type: string
                sendAt:
                  description: Send the message at a specific UTC time in milliseconds in the future. Maximum is 70 hours.
                  type: integer
                  nullable: true
                replyTo:
                  description: Email address the recipient should replyto.
                  type: string
                  nullable: true
                useJob:
                  description: Whether to wait for messages to be sent.
                  type: boolean
                  nullable: true
                from:
                  description: Email address the message is sent from.
                  type: object
                  nullable: true
                  additionalProperties: false
                  properties:
                    name:
                      type: string
                    email:
                      type: string
              additionalProperties: false
      responses:
        '200':
          description: message response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  groups:
                    type: array
                    items:
                      type: object
                      additionalProperties: false
                      properties:
                        id:
                          type: string
                          minLength: 1
                        message:
                          $ref: '#/components/schemas/Message'
                        messages:
                          type: array
                          items:
                            $ref: '#/components/schemas/Message'
                        jobId:
                          type: string
                        status:
                          type: string
                  status:
                    type: string
                  jobId:
                    type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /messages/requests:
      get:
        tags:
          - Messages
        description: Find messages by different filters
        operationId: getMessages
        parameters:
          - name: id
            description: Message id.
            in: query
            schema:
              type: string
              minLength: 1
          - name: jobId
            description: Job id used to send Messages.
            in: query
            schema:
              type: string
              minLength: 1
          - name: invitation
            description: Message invitation.
            in: query
            schema:
              type: string
              minLength: 1
          - name: domain
            description: Message domain.
            in: query
            schema:
              type: string
              minLength: 1
          - name: subject
            in: query
            description: Subject of the Message.
            schema:
              type: string
              minLength: 1
          - name: parentGroup
            in: query
            description: Parent Group the recipients belongs to.
            schema:
              type: string
              minLength: 1
          - name: tauthor
            in: query
            description: Email of the author of the message.
            schema:
              type: string
              minLength: 1
          - name: limit
            in: query
            description: Maximum number of results to return.
            schema:
              type: integer
          - name: offset
            in: query
            description: Offset of the result shown.
            schema:
              type: integer
              minimum: 0
          - name: after
            in: query
            description: Return documents that come after the after parameter. After should be an id.
            schema:
              type: string
              minLength: 1
          - name: cache
            in: query
            description: Get result from cache. Without the right privileges this parameter will be ignored.
            schema:
              type: boolean
        responses:
          '200':
            description: message response
            content:
              application/json:
                schema:
                  type: object
                  additionalProperties: false
                  properties:
                    count:
                      type: integer
                      minimum: 0
                    requests:
                      type: array
                      items:
                        $ref: '#/components/schemas/MessageRequest'
          default:
            description: Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
      post:
        tags:
          - Messages
        description: Create a direct message
        operationId: createMessage
        requestBody:
          description: Message object
          required: true
          content:
            application/json:
              schema:
                type: object
                required:
                  - subject
                  - message
                  - groups
                  - invitation
                properties:
                  signature:
                    description: Signature of the message.
                    type: string
                    minLength: 1
                  fromName:
                    description: Name of the sender.
                    type: string
                  fromEmail:
                    description: Email of the sender.
                    type: string
                  subject:
                    description: Subject of the message.
                    type: string
                  message:
                    description: Message body.
                    type: string
                  groups:
                    description: Groups the message is sent to.
                    type: array
                    minItems: 1
                    items:
                      type: string
                      minLength: 1
                  ignoreGroups:
                    description: Groups the message should not be sent to.
                    type: array
                    nullable: true
                    default: []
                    items:
                      type: string
                      minLength: 1
                  parentGroup:
                    description: Parent group that the groups belong to.
                    type: string
                    nullable: true
                  invitation:
                    description: Invitation used to validate message
                    type: string
                  sendAt:
                    description: Send the message at a specific UTC time in milliseconds in the future. Maximum is 70 hours.
                    type: integer
                    nullable: true
                  replyTo:
                    description: Email address the recipient should replyto.
                    type: string
                    nullable: true
                  useJob:
                    description: Whether to wait for messages to be sent.
                    type: boolean
                    nullable: true
                  from:
                    description: Email address the message is sent from.
                    type: object
                    nullable: true
                    additionalProperties: false
                    properties:
                      name:
                        type: string
                      email:
                        type: string
                additionalProperties: false
        responses:
          '200':
            description: message response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/MessageRequest'
          default:
            description: Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
  /messages/viewed:
    post:
      tags:
        - Messages
      description: Mark a message as viewed
      operationId: markMessageAsViewed
      requestBody:
        description: Viewed params
        required: true
        content:
          application/json:
            schema:
              required:
                - ids
                - vdate
              properties:
                ids:
                  description: Message ids to mark as viewed.
                  type: array
                  items:
                    type: string
                    minLength: 1
                vdate:
                  description: Viewed date in milliseconds.
                  type: integer
                  minimum: 0
                  nullable: true
              additionalProperties: false
      responses:
        '200':
          description: Mark as viewed response
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  status:
                    type: string
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /logs/process:
    get:
      tags:
        - Logs
      description: Get logs by different filters
      operationId: getLogs
      parameters:
        - name: id
          in: query
          description: log id
          schema:
            type: string
            minLength: 1
        - name: parentGroup
          in: query
          description: Parent Group id
          schema:
            type: string
            minLength: 1
        - name: invitation
          in: query
          description: Invitation id that contains the process function.
          schema:
            type: string
            minLength: 1
        - name: status
          in: query
          description: Status of the process. It can be ok or error.
          schema:
            type: string
            minLength: 1
        - name: minsdate
          in: query
          description: Minimum start date in milliseconds.
          schema:
            type: integer
            minimum: 0
        - name: limit
          in: query
          description: Maximum number of results to return.
          schema:
            type: integer
            default: 1000
        - name: offset
          in: query
          description: Offset of the result shown.
          schema:
            type: integer
            minimum: 0
        - name: after
          in: query
          description: Return documents that come after the after parameter. After should be an id.
          schema:
            type: string
            minLength: 1
      responses:
        '200':
          description: log response
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    minimum: 0
                  logs:
                    type: array
                    items:
                      $ref: '#/components/schemas/Log'
                additionalProperties: false
        default:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    GroupEditGet:
      additionalProperties: false
      properties:
        id:
          type: string
          minLength: 1
        invitation:
          type: string
          minLength: 1
        content:
          type: object
        cdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        tcdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        tmdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        ddate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        mdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        readers:
          type: array
          items:
            type: string
            minLength: 1
        nonreaders:
          type: array
          items:
            type: string
            minLength: 1
        writers:
          type: array
          items:
            type: string
            minLength: 1
        signatures:
          type: array
          items:
            type: string
            minLength: 1
        group:
          $ref: '#/components/schemas/GroupForInvitation'
        details:
          type: object
          additionalProperties: false
          properties:
            writable:
              type: boolean
            invitation:
              $ref: '#/components/schemas/Invitation'
        domain:
          type: string
          minLength: 1
        tauthor:
          type: string
          minLength: 1
    GroupEditGetForInvitation:
      additionalProperties: false
      properties:
        id:
          type: string
          minLength: 1
        invitation:
          type: string
          minLength: 1
        content:
          type: object
        cdate:
          $ref: '#/components/schemas/dateSchema'
        tcdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        tmdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        ddate:
          $ref: '#/components/schemas/dateSchema'
        mdate:
          $ref: '#/components/schemas/dateSchema'
        readers:
          $ref: '#/components/schemas/groupsSchema'
        nonreaders:
          $ref: '#/components/schemas/groupsSchema'
        writers:
          $ref: '#/components/schemas/groupsSchema'
        signatures:
          $ref: '#/components/schemas/signaturesSchema'
        group:
          $ref: '#/components/schemas/GroupForInvitation'
        details:
          type: object
          additionalProperties: false
          properties:
            writable:
              type: boolean
            invitation:
              $ref: '#/components/schemas/Invitation'
        domain:
          type: string
          minLength: 1
        tauthor:
          type: string
          minLength: 1
    GroupEditPost:
      additionalProperties: false
      properties:
        id:
          type: string
          minLength: 1
        invitation:
          type: string
          minLength: 1
        tauthor:
          type: string
          minLength: 1
        content:
          type: object
        cdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        ddate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        mdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        readers:
          type: array
          items:
            type: string
            minLength: 1
        nonreaders:
          type: array
          items:
            type: string
            minLength: 1
        writers:
          type: array
          items:
            type: string
            minLength: 1
        signatures:
          type: array
          items:
            type: string
            minLength: 1
        replacement:
          type: boolean
        group:
          $ref: '#/components/schemas/GroupPost'
    GroupEditPostForInvitation:
      additionalProperties: false
      properties:
        id:
          type: string
          minLength: 1
        invitation:
          type: string
          minLength: 1
        tauthor:
          type: string
          minLength: 1
        content:
          type: object
        cdate:
          $ref: '#/components/schemas/dateSchema'
        ddate:
          $ref: '#/components/schemas/dateSchema'
        mdate:
          $ref: '#/components/schemas/dateSchema'
        readers:
          $ref: '#/components/schemas/groupsSchema'
        nonreaders:
          $ref: '#/components/schemas/groupsSchema'
        writers:
          $ref: '#/components/schemas/groupsSchema'
        signatures:
          $ref: '#/components/schemas/signaturesSchema'
        replacement:
          $ref: '#/components/schemas/replacementSchema'
        group:
          $ref: '#/components/schemas/GroupPost'
    Group:
      additionalProperties: false
      properties:
        id:
          type: string
          minLength: 1
        invitations:
          type: array
          minItems: 1
          items:
            type: string
            minLength: 1
        parent:
          type: string
          minLength: 1
          nullable: true
        content:
          $ref: '#/components/schemas/contentSchema'
        cdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        mdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        ddate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        tcdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        tmdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        tauthor:
          type: string
        readers:
          type: array
          items:
            type: string
            minLength: 1
        nonreaders:
          type: array
          items:
            type: string
            minLength: 1
        writers:
          type: array
          items:
            type: string
            minLength: 1
        signatories:
          type: array
          items:
            type: string
            minLength: 1
        signatures:
          type: array
          items:
            type: string
            minLength: 1
        members:
          type: array
          items:
            type: string
            minLength: 1
        deanonymizers:
          type: array
          items:
            type: string
            minLength: 1
        impersonators:
          type: array
          items:
            type: string
            minLength: 1
        host:
          type: string
          nullable: true
        web:
          type: string
          nullable: true
        domain:
          type: string
          nullable: true
        anonids:
          type: boolean
        secret:
          type: string
        details:
          type: object
          additionalProperties: false
          properties:
            writable:
              type: boolean
    GroupForInvitation:
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/groupIdSchema'
        cdate:
          $ref: '#/components/schemas/dateSchema'
        ddate:
          $ref: '#/components/schemas/dateSchema'
        mdate:
          $ref: '#/components/schemas/dateSchema'
        tcdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        tmdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        tauthor:
          type: string
        readers:
          $ref: '#/components/schemas/groupsSchema'
        nonreaders:
          $ref: '#/components/schemas/groupsSchema'
        writers:
          $ref: '#/components/schemas/groupsSchema'
        signatories:
          $ref: '#/components/schemas/groupsSchema'
        signatures:
          $ref: '#/components/schemas/signaturesSchema'
        members:
          anyOf:
            - type: array
              items:
                type: string
                minLength: 1
            - type: object
              additionalProperties: false
              properties:
                append:
                  type: array
                  items:
                    type: string
                    minLength: 1
                remove:
                  type: array
                  items:
                    type: string
                    minLength: 1
                replace:
                  type: object
                  additionalProperties: false
                  required:
                    - index
                    - value
                  properties:
                    index:
                      type: integer
                      minimum: 0
                    value:
                      type: string
                      minLength: 1
                param:
                  type: object
                  additionalProperties: false
                  properties:
                    change:
                      type: string
                      enum:
                        - append
                        - remove
                        - replace
                    regex:
                      type: string
                    enum:
                      type: array
                      minItems: 1
                      items:
                        anyOf:
                          - type: string
                            minLength: 1
                          - type: object
                            additionalProperties: false
                            properties:
                              value:
                                type: string
                                minLength: 1
                              prefix:
                                type: string
                                minLength: 1
                              description:
                                type: string
                                minLength: 1
                    items:
                      type: array
                      items:
                        anyOf:
                          - type: string
                            minLength: 1
                          - type: object
                            additionalProperties: false
                            properties:
                              value:
                                type: string
                                minLength: 1
                              prefix:
                                type: string
                                minLength: 1
                              description:
                                type: string
                                minLength: 1
                              optional:
                                type: boolean
                    mismatchError:
                      type: string
                      minLength: 1
                    default:
                      type: string
                      minLength: 1
                    optional:
                      type: boolean
                    deletable:
                      type: boolean
        host:
          type: string
          nullable: true
        web:
          type: string
          nullable: true
        domain:
          type: string
          nullable: true
        content:
          $ref: '#/components/schemas/contentSchema'
        deanonymizers:
          $ref: '#/components/schemas/groupsSchema'
        impersonators:
          $ref: '#/components/schemas/groupsSchema'
        anonids:
          anyOf:
            - type: boolean
            - type: object
              additionalProperties: false
              properties:
                delete:
                  type: boolean
                  enum:
                    - true
                param:
                  type: object
                  additionalProperties: false
                  properties:
                    const:
                      anyOf:
                        - type: boolean
                        - type: object
                          additionalProperties: false
                          required:
                            - delete
                          properties:
                            delete:
                              type: boolean
                              enum:
                                - true
                    enum:
                      type: array
                      minItems: 1
                      maxItems: 2
                      items:
                        type: boolean
                    mismatchError:
                      type: string
                      minLength: 1
                    optional:
                      type: boolean
                    deletable:
                      type: boolean
    GroupPost:
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/groupIdSchema'
        cdate:
          $ref: '#/components/schemas/dateSchema'
        ddate:
          $ref: '#/components/schemas/dateSchema'
        mdate:
          $ref: '#/components/schemas/dateSchema'
        readers:
          $ref: '#/components/schemas/groupsSchema'
        nonreaders:
          $ref: '#/components/schemas/groupsSchema'
        writers:
          $ref: '#/components/schemas/groupsSchema'
        signatories:
          $ref: '#/components/schemas/groupsSchema'
        signatures:
          $ref: '#/components/schemas/signaturesSchema'
        deanonymizers:
          $ref: '#/components/schemas/groupsSchema'
        impersonators:
          $ref: '#/components/schemas/groupsSchema'
        content:
          $ref: '#/components/schemas/contentSchema'
        members:
          anyOf:
            - type: array
              items:
                type: string
                minLength: 1
            - type: object
              minProperties: 1
              additionalProperties: false
              properties:
                append:
                  type: array
                  items:
                    type: string
                    minLength: 1
                remove:
                  type: array
                  items:
                    type: string
                    minLength: 1
                replace:
                  type: object
                  additionalProperties: false
                  required:
                    - index
                    - value
                  properties:
                    index:
                      type: integer
                      minimum: 0
                    value:
                      type: string
                      minLength: 1
                param:
                  type: object
                  additionalProperties: false
                  properties:
                    change:
                      type: string
                      enum:
                        - append
                        - remove
                        - replace
                    regex:
                      type: string
                      minLength: 1
                    enum:
                      type: array
                      minItems: 1
                      items:
                        anyOf:
                          - type: string
                            minLength: 1
                          - type: object
                            additionalProperties: false
                            properties:
                              value:
                                type: string
                                minLength: 1
                              prefix:
                                type: string
                                minLength: 1
                              description:
                                type: string
                                minLength: 1
                    items:
                      type: array
                      items:
                        anyOf:
                          - type: string
                            minLength: 1
                          - type: object
                            additionalProperties: false
                            properties:
                              value:
                                type: string
                                minLength: 1
                              prefix:
                                type: string
                                minLength: 1
                              description:
                                type: string
                                minLength: 1
                              optional:
                                type: boolean
                    mismatchError:
                      type: string
                      minLength: 1
                    default:
                      type: array
                      items:
                        type: string
                        minLength: 1
                    optional:
                      type: boolean
                    deletable:
                      type: boolean
        host:
          type: string
          nullable: true
        web:
          type: string
          nullable: true
        anonids:
          type: boolean
    NoteEditGetForInvitation:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          minLength: 1
        invitation:
          type: string
          minLength: 1
        domain:
          type: string
          minLength: 1
        content:
          type: object
        tcdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        tmdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        cdate:
          $ref: '#/components/schemas/dateSchema'
        ddate:
          $ref: '#/components/schemas/dateSchema'
        mdate:
          $ref: '#/components/schemas/dateSchema'
        readers:
          $ref: '#/components/schemas/groupsSchema'
        nonreaders:
          $ref: '#/components/schemas/groupsSchema'
        writers:
          $ref: '#/components/schemas/groupsSchema'
        signatures:
          $ref: '#/components/schemas/signaturesSchema'
        note:
          $ref: '#/components/schemas/NoteForInvitation'
        tauthor:
          type: string
          minLength: 1
        replacement:
          $ref: '#/components/schemas/replacementSchema'
        details:
          type: object
          additionalProperties: false
          properties:
            writable:
              type: boolean
            invitation:
              $ref: '#/components/schemas/Invitation'
            presentation:
              $ref: '#/components/schemas/presentationSchema'
    NoteEditGet:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          minLength: 1
        invitation:
          type: string
          minLength: 1
        domain:
          type: string
          minLength: 1
        content:
          type: object
        tcdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        tmdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        cdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        ddate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        mdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        readers:
          type: array
          items:
            type: string
            minLength: 1
        nonreaders:
          type: array
          items:
            type: string
            minLength: 1
        writers:
          type: array
          items:
            type: string
            minLength: 1
        signatures:
          type: array
          items:
            type: string
            minLength: 1
        note:
          $ref: '#/components/schemas/NoteForInvitation'
        tauthor:
          type: string
          minLength: 1
        replacement:
          type: boolean
        details:
          type: object
          additionalProperties: false
          properties:
            writable:
              type: boolean
            invitation:
              $ref: '#/components/schemas/Invitation'
            presentation:
              $ref: '#/components/schemas/presentationSchema'
    NoteEditPostForInvitation:
      additionalProperties: false
      properties:
        id:
          type: string
          minLength: 1
        invitation:
          type: string
          minLength: 1
        tauthor:
          type: string
          minLength: 1
        content:
          type: object
        cdate:
          $ref: '#/components/schemas/dateSchema'
        ddate:
          $ref: '#/components/schemas/dateSchema'
        mdate:
          $ref: '#/components/schemas/dateSchema'
        readers:
          $ref: '#/components/schemas/groupsSchema'
        nonreaders:
          $ref: '#/components/schemas/groupsSchema'
        writers:
          $ref: '#/components/schemas/groupsSchema'
        signatures:
          $ref: '#/components/schemas/signaturesSchema'
        replacement:
          $ref: '#/components/schemas/replacementSchema'
        note:
          $ref: '#/components/schemas/NotePostForInvitation'
    NotePostForInvitation:
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/noteIdSchema'
        forum:
          $ref: '#/components/schemas/forumSchema'
        replyto:
          $ref: '#/components/schemas/replytoSchema'
        license:
          $ref: '#/components/schemas/licenseSchema'
        content:
          type: object
        cdate:
          $ref: '#/components/schemas/dateSchema'
        pdate:
          $ref: '#/components/schemas/dateSchema'
        odate:
          $ref: '#/components/schemas/dateSchema'
        ddate:
          $ref: '#/components/schemas/dateSchema'
        mdate:
          $ref: '#/components/schemas/dateSchema'
        readers:
          $ref: '#/components/schemas/groupsSchema'
        nonreaders:
          $ref: '#/components/schemas/groupsSchema'
        writers:
          $ref: '#/components/schemas/groupsSchema'
        signatures:
          $ref: '#/components/schemas/signaturesSchema'
    NoteEditPost:
      additionalProperties: false
      properties:
        id:
          type: string
          minLength: 1
        invitation:
          type: string
          minLength: 1
        tauthor:
          type: string
          minLength: 1
        content:
          type: object
        cdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        ddate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        mdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        readers:
          type: array
          items:
            type: string
            minLength: 1
        nonreaders:
          type: array
          items:
            type: string
            minLength: 1
        writers:
          type: array
          items:
            type: string
            minLength: 1
        signatures:
          type: array
          items:
            type: string
            minLength: 1
        replacement:
          type: boolean
        note:
          $ref: '#/components/schemas/NotePost'
    NotePost:
      additionalProperties: false
      properties:
        id:
          type: string
          minLength: 1
        forum:
          type: string
          minLength: 1
        replyto:
          type: string
          minLength: 1
        license:
          type: string
          minLength: 1
        content:
          type: object
        cdate:
          anyOf:
            - type: integer
              minimum: 0
              maximum: 9999999999999
            - type: object
              additionalProperties: false
              required:
                - delete
              properties:
                delete:
                  type: boolean
                  enum:
                    - true
        pdate:
          anyOf:
            - type: integer
              minimum: 0
              maximum: 9999999999999
            - type: object
              additionalProperties: false
              required:
                - delete
              properties:
                delete:
                  type: boolean
                  enum:
                    - true
        odate:
          anyOf:
            - type: integer
              minimum: 0
              maximum: 9999999999999
            - type: object
              additionalProperties: false
              required:
                - delete
              properties:
                delete:
                  type: boolean
                  enum:
                    - true
        ddate:
          anyOf:
            - type: integer
              minimum: 0
              maximum: 9999999999999
            - type: object
              additionalProperties: false
              required:
                - delete
              properties:
                delete:
                  type: boolean
                  enum:
                    - true
        mdate:
          anyOf:
            - type: integer
              minimum: 0
              maximum: 9999999999999
            - type: object
              additionalProperties: false
              required:
                - delete
              properties:
                delete:
                  type: boolean
                  enum:
                    - true
        readers:
          anyOf:
            - type: array
              items:
                type: string
                minLength: 1
            - type: object
              minProperties: 1
              additionalProperties: false
              properties:
                append:
                  type: array
                  items:
                    type: string
                    minLength: 1
                remove:
                  type: array
                  items:
                    type: string
                    minLength: 1
                replace:
                  type: object
                  additionalProperties: false
                  required:
                    - index
                    - value
                  properties:
                    index:
                      type: integer
                      minimum: 0
                    value:
                      type: string
                      minLength: 1
        nonreaders:
          anyOf:
            - type: array
              items:
                type: string
                minLength: 1
            - type: object
              minProperties: 1
              additionalProperties: false
              properties:
                append:
                  type: array
                  items:
                    type: string
                    minLength: 1
                remove:
                  type: array
                  items:
                    type: string
                    minLength: 1
                replace:
                  type: object
                  additionalProperties: false
                  required:
                    - index
                    - value
                  properties:
                    index:
                      type: integer
                      minimum: 0
                    value:
                      type: string
                      minLength: 1
        writers:
          anyOf:
            - type: array
              items:
                type: string
                minLength: 1
            - type: object
              minProperties: 1
              additionalProperties: false
              properties:
                append:
                  type: array
                  items:
                    type: string
                    minLength: 1
                remove:
                  type: array
                  items:
                    type: string
                    minLength: 1
                replace:
                  type: object
                  additionalProperties: false
                  required:
                    - index
                    - value
                  properties:
                    index:
                      type: integer
                      minimum: 0
                    value:
                      type: string
                      minLength: 1
        signatures:
          anyOf:
            - type: array
              items:
                type: string
                minLength: 1
            - type: object
              minProperties: 1
              additionalProperties: false
              properties:
                append:
                  type: array
                  items:
                    type: string
                    minLength: 1
                remove:
                  type: array
                  items:
                    type: string
                    minLength: 1
                replace:
                  type: object
                  additionalProperties: false
                  required:
                    - index
                    - value
                  properties:
                    index:
                      type: integer
                      minimum: 0
                    value:
                      type: string
                      minLength: 1
    NoteForInvitation:
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/noteIdSchema'
        invitations:
          type: array
          items:
            type: string
            minLength: 1
        number:
          type: integer
          minimum: 1
        domain:
          type: string
          minLength: 1
        forum:
          $ref: '#/components/schemas/forumSchema'
        replyto:
          $ref: '#/components/schemas/replytoSchema'
        content:
          type: object
        tcdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        tmdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        cdate:
          $ref: '#/components/schemas/dateSchema'
        pdate:
          $ref: '#/components/schemas/dateSchema'
        odate:
          $ref: '#/components/schemas/dateSchema'
        ddate:
          $ref: '#/components/schemas/dateSchema'
        mdate:
          $ref: '#/components/schemas/dateSchema'
        readers:
          $ref: '#/components/schemas/groupsSchema'
        nonreaders:
          $ref: '#/components/schemas/groupsSchema'
        writers:
          $ref: '#/components/schemas/groupsSchema'
        signatures:
          $ref: '#/components/schemas/signaturesSchema'
        license:
          $ref: '#/components/schemas/licenseSchema'
        version:
          type: integer
          enum:
            - 1
            - 2
    Note:
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/noteIdSchema'
        invitations:
          type: array
          items:
            type: string
            minLength: 1
        number:
          type: integer
          minimum: 1
        domain:
          type: string
          minLength: 1
        forum:
          type: string
          minLength: 1
        replyto:
          type: string
          minLength: 1
        content:
          $ref: '#/components/schemas/contentSchema'
        tcdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        tmdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        cdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        pdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        odate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        ddate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        mdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        readers:
          type: array
          items:
            type: string
            minLength: 1
        nonreaders:
          type: array
          items:
            type: string
            minLength: 1
        writers:
          type: array
          items:
            type: string
            minLength: 1
        signatures:
          type: array
          items:
            type: string
            minLength: 1
        forumContent:
          $ref: '#/components/schemas/contentSchema'
        license:
          type: string
          minLength: 1
        version:
          type: integer
          enum:
            - 1
            - 2
        details:
          type: object
          additionalProperties: false
          properties:
            replyCount:
              type: integer
            writable:
              type: boolean
            revisions:
              type: boolean
            forumContent:
              $ref: '#/components/schemas/contentSchema'
            tags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
            invitation:
              $ref: '#/components/schemas/Invitation'
            invitations:
              type: array
              items:
                $ref: '#/components/schemas/Invitation'
            directReplyCount:
              type: integer
            directReplies:
              type: array
              items:
                type: object
            replies:
              type: array
              items:
                type: object
            presentation:
              $ref: '#/components/schemas/presentationSchema'
            signatures:
              type: array
              items:
                type: object
                additionalProperties: false
                properties:
                  id:
                    type: string
                    minLength: 1
                  readers:
                    type: array
                    items:
                      type: string
                      minLength: 1
                  members:
                    type: array
                    items:
                      type: string
                      minLength: 1
    InvitationEditGet:
      type: object
      additionalProperties: false
      properties:
        id:
          type: string
          minLength: 1
        invitations:
          type: string
          minLength: 1
        invitation:
          $ref: '#/components/schemas/Invitation'
        content:
          type: object
        cdate:
          $ref: '#/components/schemas/dateSchema'
        ddate:
          $ref: '#/components/schemas/dateSchema'
        tcdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        mdate:
          $ref: '#/components/schemas/dateSchema'
        tmdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        details:
          type: object
          additionalProperties: false
          properties:
            invitation:
              $ref: '#/components/schemas/Invitation'
            writable:
              type: boolean
        readers:
          $ref: '#/components/schemas/groupsSchema'
        nonreaders:
          $ref: '#/components/schemas/groupsSchema'
        writers:
          $ref: '#/components/schemas/groupsSchema'
        signatures:
          $ref: '#/components/schemas/signaturesSchema'
        tauthor:
          type: string
          minLength: 1
        domain:
          type: string
          minLength: 1
        replacement:
          $ref: '#/components/schemas/replacementSchema'
    InvitationEditPost:
      additionalProperties: false
      properties:
        id:
          type: string
          minLength: 1
        invitations:
          type: string
          minLength: 1
        replacement:
          type: boolean
        content:
          type: object
        invitation:
          $ref: '#/components/schemas/InvitationPost'
        cdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        mdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        ddate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        readers:
          type: array
          items:
            type: string
            minLength: 1
        nonreaders:
          type: array
          items:
            type: string
            minLength: 1
        writers:
          type: array
          items:
            type: string
            minLength: 1
        signatures:
          type: array
          items:
            type: string
            minLength: 1
    InvitationEditPostForInvitation:
      additionalProperties: false
      properties:
        id:
          type: string
          minLength: 1
        invitations:
          type: string
          minLength: 1
        replacement:
          $ref: '#/components/schemas/replacementSchema'
        content:
          type: object
        invitation:
          $ref: '#/components/schemas/InvitationPost'
        cdate:
          $ref: '#/components/schemas/dateSchema'
        mdate:
          $ref: '#/components/schemas/dateSchema'
        ddate:
          $ref: '#/components/schemas/dateSchema'
        readers:
          $ref: '#/components/schemas/groupsSchema'
        nonreaders:
          $ref: '#/components/schemas/groupsSchema'
        writers:
          $ref: '#/components/schemas/groupsSchema'
        signatures:
          $ref: '#/components/schemas/signaturesSchema'
    InvitationPost:
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/invitationIdSchema'
        edge:
          $ref: '#/components/schemas/Edge'
        tag:
          $ref: '#/components/schemas/Tag'
        message:
          $ref: '#/components/schemas/MessageRequestForInvitation'
        edit:
          anyOf:
            - $ref: '#/components/schemas/InvitationEditPostForInvitation'
            - $ref: '#/components/schemas/NoteEditPostForInvitation'
            - $ref: '#/components/schemas/GroupEditPostForInvitation'
            - type: boolean
              enum:
                - true
        bulk:
          type: boolean
          enum:
            - true
        content:
          type: object
        cdate:
          $ref: '#/components/schemas/dateSchema'
        ddate:
          $ref: '#/components/schemas/dateSchema'
        duedate:
          $ref: '#/components/schemas/dateSchema'
        expdate:
          $ref: '#/components/schemas/dateSchema'
        responseArchiveDate:
          anyOf:
            - type: integer
              minimum: 0
            - type: object
              additionalProperties: false
              required:
                - delete
              properties:
                delete:
                  type: boolean
                  enum:
                    - true
        maxReplies:
          anyOf:
            - type: integer
              minimum: 1
            - type: object
              additionalProperties: false
              required:
                - delete
              properties:
                delete:
                  type: boolean
                  enum:
                    - true
        minReplies:
          anyOf:
            - type: integer
              minimum: 0
            - type: object
              additionalProperties: false
              required:
                - delete
              properties:
                delete:
                  type: boolean
                  enum:
                    - true
        taskCompletionCount:
          type: integer
          nullable: true
          minimum: 0
        replyForumViews:
          $ref: '#/components/schemas/replyForumViewsSchema'
        preprocess:
          anyOf:
            - type: string
            - type: object
              additionalProperties: false
              required:
                - delete
              properties:
                delete:
                  type: boolean
                  enum:
                    - true
        process:
          anyOf:
            - type: string
            - type: object
              additionalProperties: false
              properties:
                script:
                  type: string
                  minLength: 1
                delay:
                  type: integer
                  minimum: 0
                delete:
                  type: boolean
                  enum:
                    - true
        dateprocesses:
          $ref: '#/components/schemas/dateprocessesSchema'
        web:
          anyOf:
            - type: string
              minLength: 1
            - type: object
              additionalProperties: false
              required:
                - delete
              properties:
                delete:
                  type: boolean
                  enum:
                    - true
        readers:
          $ref: '#/components/schemas/groupsSchema'
        nonreaders:
          $ref: '#/components/schemas/groupsSchema'
        writers:
          $ref: '#/components/schemas/groupsSchema'
        signatures:
          $ref: '#/components/schemas/signaturesSchema'
        invitees:
          $ref: '#/components/schemas/groupsSchema'
        noninvitees:
          $ref: '#/components/schemas/groupsSchema'
    Invitation:
      additionalProperties: false
      properties:
        id:
          $ref: '#/components/schemas/invitationIdSchema'
        invitations:
          type: array
          items:
            type: string
            minLength: 1
        type:
          type: string
          enum:
            - edge
            - tag
            - meta
            - note
            - invitation
            - group
            - message
        content:
          $ref: '#/components/schemas/contentSchema'
        domain:
          type: string
          minLength: 1
        edge:
          $ref: '#/components/schemas/Edge'
        tag:
          $ref: '#/components/schemas/Tag'
        message:
          $ref: '#/components/schemas/MessageRequestForInvitation'
        edit:
          anyOf:
            - $ref: '#/components/schemas/InvitationEditGet'
            - $ref: '#/components/schemas/NoteEditGetForInvitation'
            - $ref: '#/components/schemas/GroupEditGetForInvitation'
            - type: boolean
              enum:
                - true
        tcdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        tmdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        cdate:
          $ref: '#/components/schemas/dateSchema'
        mdate:
          $ref: '#/components/schemas/dateSchema'
        ddate:
          $ref: '#/components/schemas/dateSchema'
        duedate:
          $ref: '#/components/schemas/dateSchema'
        expdate:
          $ref: '#/components/schemas/dateSchema'
        responseArchiveDate:
          anyOf:
            - type: integer
              minimum: 0
            - type: object
              additionalProperties: false
              required:
                - delete
              properties:
                delete:
                  type: boolean
                  enum:
                    - true
        details:
          type: object
          additionalProperties: false
          properties:
            writable:
              type: boolean
            replytoNote:
              $ref: '#/components/schemas/Note'
            repliedNotes:
              type: array
              items:
                $ref: '#/components/schemas/Note'
            repliedEdits:
              type: array
              items:
                $ref: '#/components/schemas/NoteEditGet'
            repliedTags:
              type: array
              items:
                $ref: '#/components/schemas/Tag'
            repliedEdges:
              type: array
              items:
                $ref: '#/components/schemas/Edge'
            writableWith:
              type: array
              items:
                $ref: '#/components/schemas/Invitation'
        maxReplies:
          anyOf:
            - type: integer
              minimum: 1
            - type: object
              additionalProperties: false
              required:
                - delete
              properties:
                delete:
                  type: boolean
                  enum:
                    - true
        minReplies:
          anyOf:
            - type: integer
              minimum: 0
            - type: object
              additionalProperties: false
              required:
                - delete
              properties:
                delete:
                  type: boolean
                  enum:
                    - true
        taskCompletionCount:
          type: integer
          nullable: true
          minimum: 0
        replyForumViews:
          $ref: '#/components/schemas/replyForumViewsSchema'
        preprocess:
          anyOf:
            - type: string
            - type: object
              additionalProperties: false
              required:
                - delete
              properties:
                delete:
                  type: boolean
                  enum:
                    - true
        process:
          anyOf:
            - type: string
            - type: object
              additionalProperties: false
              properties:
                script:
                  type: string
                  minLength: 1
                delay:
                  type: integer
                  minimum: 0
                delete:
                  type: boolean
                  enum:
                    - true
        dateprocesses:
          $ref: '#/components/schemas/dateprocessesSchema'
        web:
          anyOf:
            - type: string
              minLength: 1
            - type: object
              additionalProperties: false
              required:
                - delete
              properties:
                delete:
                  type: boolean
                  enum:
                    - true
        readers:
          $ref: '#/components/schemas/groupsSchema'
        nonreaders:
          $ref: '#/components/schemas/groupsSchema'
        writers:
          $ref: '#/components/schemas/groupsSchema'
        signatures:
          $ref: '#/components/schemas/signaturesSchema'
        invitees:
          $ref: '#/components/schemas/groupsSchema'
        noninvitees:
          $ref: '#/components/schemas/groupsSchema'
    Tag:
      additionalProperties: false
      required:
        - tag
        - forum
        - signatures
      properties:
        id:
          $ref: '#/components/schemas/tagIdSchema'
        invitation:
          type: string
          minLength: 1
        forum:
          $ref: '#/components/schemas/forumSchema'
        replyto:
          $ref: '#/components/schemas/replytoSchema'
        tag:
          anyOf:
            - type: string
            - type: object
              minProperties: 1
              additionalProperties: false
              properties:
                param:
                  type: object
                  minProperties: 1
                  additionalProperties: false
                  properties:
                    regex:
                      type: string
                      minLength: 1
                    minLength:
                      type: integer
                      minimum: 0
                    maxLength:
                      type: integer
                      minimum: 0
                    const:
                      type: string
                      minLength: 1
                    enum:
                      type: array
                      minItems: 1
                      items:
                        anyOf:
                          - type: string
                          - type: object
                            additionalProperties: false
                            properties:
                              value:
                                type: string
                                minLength: 1
                              prefix:
                                type: string
                                minLength: 1
                              description:
                                type: string
                                minLength: 1
                    mismatchError:
                      type: string
                      minLength: 1
                    default:
                      type: string
                    description:
                      type: string
                      minLength: 1
                delete:
                  type: boolean
                  enum:
                    - true
        cdate:
          $ref: '#/components/schemas/dateSchema'
        ddate:
          $ref: '#/components/schemas/dateSchema'
        mdate:
          $ref: '#/components/schemas/dateSchema'
        tcdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        tmdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        readers:
          $ref: '#/components/schemas/groupsSchema'
        nonreaders:
          $ref: '#/components/schemas/groupsSchema'
        writers:
          $ref: '#/components/schemas/groupsSchema'
        signatures:
          $ref: '#/components/schemas/signaturesSchema'
        tauthor:
          type: string
          minLength: 1
        domain:
          type: string
          minLength: 1
        details:
          type: object
          additionalProperties: false
          properties:
            forumContent:
              $ref: '#/components/schemas/Note'
    ProfileContent:
      additionalProperties: false
      properties:
        yearOfBirth:
          type: integer
        preferredEmail:
          type: string
        gender:
          type: string
        homepage:
          type: string
        dblp:
          type: string
        gscholar:
          type: string
        wikipedia:
          type: string
        linkedin:
          type: string
        aclanthology:
          type: string
        orcid:
          type: string
        names:
          type: array
          items:
            type: object
            additionalProperties: false
            properties:
              preferred:
                type: boolean
              first:
                type: string
              middle:
                type: string
              last:
                type: string
              fullname:
                type: string
              username:
                type: string
        emails:
          type: array
          items:
            type: string
        emailsConfirmed:
          type: array
          items:
            type: string
        history:
          type: array
          items:
            type: object
            additionalProperties: false
            properties:
              position:
                type: string
              institution:
                type: object
                additionalProperties: false
                properties:
                  name:
                    type: string
                    minLength: 1
                  domain:
                    type: string
                    minLength: 1
                  country:
                    type: string
                    minLength: 1
                    nullable: true
                  stateProvince:
                    type: string
                    minLength: 1
                    nullable: true
                  city:
                    type: string
                    minLength: 1
                    nullable: true
                  department:
                    type: string
                    minLength: 1
                    nullable: true
              start:
                anyOf:
                  - type: integer
                    nullable: true
                    minimum: 1900
                    maximum: 2099
                  - type: string
                    maxLength: 0
              end:
                anyOf:
                  - type: integer
                    nullable: true
                    minimum: 1900
                    maximum: 2099
                  - type: string
                    maxLength: 0
        relations:
          type: array
          nullable: true
          items:
            type: object
            additionalProperties: false
            properties:
              relation:
                type: string
                minLength: 1
              name:
                type: string
                minLength: 1
              email:
                type: string
                minLength: 1
              username:
                type: string
                minLength: 1
              start:
                anyOf:
                  - type: integer
                    nullable: true
                    minimum: 1900
                    maximum: 2099
                  - type: string
                    maxLength: 0
              end:
                anyOf:
                  - type: integer
                    nullable: true
                    minimum: 1900
                    maximum: 2099
                  - type: string
                    maxLength: 0
              readers:
                type: array
                items:
                  type: string
                  minLength: 1
        expertise:
          type: array
          nullable: true
          items:
            type: object
            additionalProperties: false
            properties:
              keywords:
                type: array
                nullable: true
                minItems: 1
                items:
                  type: string
                  minLength: 1
              start:
                anyOf:
                  - type: integer
                    nullable: true
                    minimum: 1900
                    maximum: 2099
                  - type: string
                    maxLength: 0
              end:
                anyOf:
                  - type: integer
                    nullable: true
                    minimum: 1900
                    maximum: 2099
                  - type: string
                    maxLength: 0
    Profile:
      additionalProperties: false
      required:
        - id
        - invitation
        - content
        - readers
        - writers
        - signatures
      properties:
        id:
          type: string
        active:
          type: boolean
        password:
          type: boolean
        invitation:
          type: string
        email:
          type: string
        content:
          $ref: '#/components/schemas/ProfileContent'
        metaContent:
          type: object
        ddate:
          type: integer
          nullable: true
        tcdate:
          type: integer
        tmdate:
          type: integer
        tauthor:
          type: string
        readers:
          type: array
          items:
            type: string
        nonreaders:
          type: array
          items:
            type: string
        writers:
          type: array
          items:
            type: string
        signatures:
          type: array
          items:
            type: string
        state:
          type: string
          enum:
            - Active
            - Active Institutional
            - Active Automatic
            - Inactive
            - Blocked
            - Rejected
            - Needs Moderation
            - Merged
            - Limited
        termsTimestamp:
          type: integer
          minimum: 0
          maximum: 9999999999999
    ProfileReference:
      required:
        - signatures
      additionalProperties: false
      properties:
        id:
          type: string
          minLength: 1
        invitation:
          type: string
          minLength: 1
        referent:
          type: string
          minLength: 1
        tcdate:
          type: integer
        tmdate:
          type: integer
        ddate:
          type: integer
          nullable: true
        packaging:
          type: object
        active:
          type: boolean
        password:
          type: boolean
        tauthor:
          type: string
        state:
          type: string
          enum:
            - Active
            - Active Institutional
            - Active Automatic
            - Inactive
            - Blocked
            - Rejected
            - Needs Moderation
            - Merged
            - Limited
        content:
          type: object
          additionalProperties: false
          properties:
            preferredEmail:
              type: string
            gender:
              type: string
              nullable: true
            yearOfBirth:
              type: integer
            homepage:
              type: string
            dblp:
              type: string
            gscholar:
              type: string
            wikipedia:
              type: string
            linkedin:
              type: string
            aclanthology:
              type: string
            orcid:
              type: string
            semanticScholar:
              type: string
            names:
              type: array
              items:
                type: object
                additionalProperties: false
                properties:
                  preferred:
                    type: boolean
                  first:
                    type: string
                    nullable: true
                  middle:
                    type: string
                    nullable: true
                  last:
                    type: string
                    nullable: true
                  fullname:
                    type: string
                    minLength: 1
                  username:
                    type: string
            emails:
              type: array
              items:
                type: string
                minLength: 1
            emailsConfirmed:
              type: array
              items:
                type: string
            history:
              type: array
              nullable: true
              minItems: 1
              items:
                type: object
                additionalProperties: false
                required:
                  - position
                  - institution
                  - start
                properties:
                  position:
                    type: string
                    minLength: 1
                  institution:
                    type: object
                    additionalProperties: false
                    properties:
                      name:
                        type: string
                        minLength: 1
                      domain:
                        type: string
                        minLength: 1
                      country:
                        type: string
                        minLength: 1
                        nullable: true
                      stateProvince:
                        type: string
                        minLength: 1
                        nullable: true
                      city:
                        type: string
                        minLength: 1
                        nullable: true
                      department:
                        type: string
                        minLength: 1
                        nullable: true
                  start:
                    anyOf:
                      - type: integer
                        nullable: true
                        minimum: 1900
                        maximum: 2099
                      - type: string
                        maxLength: 0
                  end:
                    anyOf:
                      - type: integer
                        nullable: true
                        minimum: 1900
                        maximum: 2099
                      - type: string
                        maxLength: 0
            relations:
              type: array
              nullable: true
              items:
                type: object
                additionalProperties: false
                properties:
                  relation:
                    type: string
                  name:
                    type: string
                    minLength: 1
                  email:
                    type: string
                    minLength: 1
                  username:
                    type: string
                    minLength: 1
                  start:
                    anyOf:
                      - type: integer
                        nullable: true
                        minimum: 1900
                        maximum: 2099
                      - type: string
                        maxLength: 0
                  end:
                    anyOf:
                      - type: integer
                        nullable: true
                        minimum: 1900
                        maximum: 2099
                      - type: string
                        maxLength: 0
                  readers:
                    type: array
                    items:
                      type: string
                      minLength: 1
            expertise:
              type: array
              nullable: true
              items:
                type: object
                additionalProperties: false
                required:
                  - keywords
                  - start
                properties:
                  keywords:
                    type: array
                    nullable: true
                    minItems: 1
                    items:
                      type: string
                      minLength: 1
                  start:
                    anyOf:
                      - type: integer
                        nullable: true
                        minimum: 1900
                        maximum: 2099
                      - type: string
                        maxLength: 0
                  end:
                    anyOf:
                      - type: integer
                        nullable: true
                        minimum: 1900
                        maximum: 2099
                      - type: string
                        maxLength: 0
        metaContent:
          type: object
          additionalProperties: false
          properties:
            preferredEmail:
              $ref: '#/components/schemas/MetaContentSingleField'
            gender:
              $ref: '#/components/schemas/MetaContentSingleField'
            yearOfBirth:
              type: object
              minProperties: 1
              properties:
                values:
                  type: array
                  minItems: 1
                  maxItems: 1
                  items:
                    type: integer
                weights:
                  type: array
                  minItems: 1
                  maxItems: 1
                  items:
                    type: integer
                signatures:
                  type: array
                  minItems: 1
                  maxItems: 1
                  items:
                    type: string
                    minLength: 1
              additionalProperties: false
            homepage:
              $ref: '#/components/schemas/MetaContentSingleField'
            dblp:
              $ref: '#/components/schemas/MetaContentSingleField'
            gscholar:
              $ref: '#/components/schemas/MetaContentSingleField'
            wikipedia:
              $ref: '#/components/schemas/MetaContentSingleField'
            linkedin:
              $ref: '#/components/schemas/MetaContentSingleField'
            aclanthology:
              $ref: '#/components/schemas/MetaContentSingleField'
            orcid:
              $ref: '#/components/schemas/MetaContentSingleField'
            semanticScholar:
              $ref: '#/components/schemas/MetaContentSingleField'
            names:
              anyOf:
                - type: object
                  additionalProperties: false
                  properties:
                    values:
                      type: array
                      items:
                        anyOf:
                          - type: object
                            required:
                              - first
                              - last
                            properties:
                              first:
                                type: string
                                minLength: 1
                              middle:
                                type: string
                                nullable: true
                              last:
                                type: string
                                minLength: 1
                              fullname:
                                type: string
                                minLength: 1
                              username:
                                type: string
                              preferred:
                                type: boolean
                                nullable: true
                            additionalProperties: false
                          - type: object
                            required:
                              - fullname
                            properties:
                              first:
                                type: string
                                nullable: true
                              middle:
                                type: string
                                nullable: true
                              last:
                                type: string
                                nullable: true
                              fullname:
                                type: string
                                minLength: 1
                              username:
                                type: string
                              preferred:
                                type: boolean
                                nullable: true
                            additionalProperties: false
                    weights:
                      type: array
                      items:
                        type: integer
                - type: array
                  minItems: 1
                  items:
                    type: object
                    additionalProperties: false
                    required:
                      - signatures
                    properties:
                      signatures:
                        type: array
                        minItems: 1
                        items:
                          type: string
                          minLength: 1
            emails:
              anyOf:
                - type: object
                  additionalProperties: false
                  properties:
                    values:
                      type: array
                      minItems: 1
                      items:
                        type: string
                        minLength: 1
                    weights:
                      type: array
                      minItems: 1
                      items:
                        type: integer
                - type: array
                  minItems: 1
                  items:
                    type: object
                    additionalProperties: false
                    required:
                      - signatures
                    properties:
                      signatures:
                        type: array
                        minItems: 1
                        items:
                          type: string
                          minLength: 1
            history:
              anyOf:
                - type: object
                  properties:
                    values:
                      type: array
                      items:
                        type: object
                        additionalProperties: false
                        properties:
                          position:
                            type: string
                          institution:
                            type: object
                            additionalProperties: false
                            properties:
                              name:
                                type: string
                                minLength: 1
                              domain:
                                type: string
                                minLength: 1
                              country:
                                type: string
                                minLength: 1
                                nullable: true
                              stateProvince:
                                type: string
                                minLength: 1
                                nullable: true
                              city:
                                type: string
                                minLength: 1
                                nullable: true
                              department:
                                type: string
                                minLength: 1
                                nullable: true
                          start:
                            anyOf:
                              - type: integer
                                nullable: true
                                minimum: 1900
                                maximum: 2099
                              - type: string
                                maxLength: 0
                          end:
                            anyOf:
                              - type: integer
                                nullable: true
                                minimum: 1900
                                maximum: 2099
                              - type: string
                                maxLength: 0
                    weights:
                      type: array
                      items:
                        type: integer
                  additionalProperties: false
                - type: array
                  minItems: 1
                  items:
                    type: object
                    additionalProperties: false
                    required:
                      - signatures
                    properties:
                      signatures:
                        type: array
                        minItems: 1
                        items:
                          type: string
                          minLength: 1
            relations:
              anyOf:
                - type: object
                  properties:
                    values:
                      type: array
                      items:
                        type: object
                        additionalProperties: false
                        required:
                          - relation
                          - name
                        properties:
                          name:
                            type: string
                            minLength: 1
                          email:
                            type: string
                            minLength: 1
                          username:
                            type: string
                            minLength: 1
                          relation:
                            type: string
                            minLength: 1
                          start:
                            anyOf:
                              - type: integer
                                nullable: true
                                minimum: 1900
                                maximum: 2099
                              - type: string
                                maxLength: 0
                          end:
                            anyOf:
                              - type: integer
                                nullable: true
                                minimum: 1900
                                maximum: 2099
                              - type: string
                                maxLength: 0
                          readers:
                            type: array
                            nullable: true
                            items:
                              type: string
                              minLength: 1
                    weights:
                      type: array
                      items:
                        type: integer
                  additionalProperties: false
                - type: array
                  minItems: 1
                  items:
                    type: object
                    additionalProperties: false
                    required:
                      - signatures
                    properties:
                      signatures:
                        type: array
                        minItems: 1
                        items:
                          type: string
                          minLength: 1
            expertise:
              type: array
              minItems: 1
              items:
                type: object
                additionalProperties: false
                required:
                  - signatures
                properties:
                  signatures:
                    type: array
                    minItems: 1
                    items:
                      type: string
                      minLength: 1
        readers:
          type: array
          items:
            type: string
            minLength: 1
        nonreaders:
          type: array
          nullable: true
          items:
            type: string
            minLength: 1
        writers:
          type: array
          items:
            type: string
            minLength: 1
        signatures:
          type: array
          minItems: 1
          items:
            type: string
            minLength: 1
    SimplifiedProfile:
      additionalProperties: false
      properties:
        id:
          description: OpenReview Profile id.
          type: string
        first:
          type: string
          nullable: true
        middle:
          type: string
          nullable: true
        last:
          type: string
          nullable: true
        fullname:
          type: string
          minLength: 1
        emails:
          type: array
          items:
            type: string
        preferredEmail:
          type: string
        usernames:
          description: Profiles can have more than one username that have the same format as the OpenReview Profile id.
          type: array
          items:
            type: string
            minLength: 1
        preferredId:
          description: Preferred OpenReview username.
          type: string
          minLength: 1
        state:
          type: string
          enum:
            - Active
            - Active Institutional
            - Active Automatic
            - Inactive
            - Blocked
            - Rejected
            - Needs Moderation
            - Merged
            - Limited
        termsTimestamp:
          type: integer
          minimum: 0
          maximum: 9999999999999
    Edge:
      additionalProperties: false
      required:
        - head
        - tail
      properties:
        id:
          anyOf:
            - type: string
              minLength: 1
            - type: object
              additionalProperties: false
              properties:
                param:
                  type: object
                  minProperties: 1
                  properties:
                    withInvitation:
                      type: string
                      minLength: 1
                    mismatchError:
                      type: string
                      minLength: 1
                    optional:
                      type: boolean
                  additionalProperties: false
                delete:
                  type: boolean
                  enum:
                    - true
        invitation:
          type: string
          minLength: 1
        head:
          $ref: '#/components/schemas/EdgeProp'
        tail:
          $ref: '#/components/schemas/EdgeProp'
        label:
          anyOf:
            - type: string
              minLength: 1
            - type: object
              minProperties: 1
              additionalProperties: false
              properties:
                delete:
                  type: boolean
                  enum:
                    - true
                param:
                  type: object
                  minProperties: 1
                  additionalProperties: false
                  properties:
                    regex:
                      type: string
                      minLength: 1
                    enum:
                      type: array
                      minItems: 1
                      items:
                        anyOf:
                          - type: string
                            minLength: 1
                          - type: object
                            properties:
                              value:
                                type: string
                                minLength: 1
                              prefix:
                                type: string
                                minLength: 1
                              description:
                                type: string
                                minLength: 1
                            additionalProperties: false
                    minLength:
                      type: integer
                      minimum: 0
                    maxLength:
                      type: integer
                      minimum: 0
                    const:
                      anyOf:
                        - type: string
                          minLength: 1
                        - type: object
                          additionalProperties: false
                          required:
                            - delete
                          properties:
                            delete:
                              type: boolean
                              enum:
                                - true
                    optional:
                      type: boolean
                    deletable:
                      type: boolean
                    mismatchError:
                      type: string
                      minLength: 1
                    hidden:
                      type: boolean
                    default:
                      type: string
                      minLength: 1
                    fieldName:
                      type: string
                      minLength: 1
                    input:
                      type: string
                      enum:
                        - text
                        - textarea
                        - select
                        - checkbox
                        - radio
        weight:
          anyOf:
            - type: number
            - type: object
              additionalProperties: false
              minProperties: 1
              properties:
                delete:
                  type: boolean
                  enum:
                    - true
                param:
                  type: object
                  minProperties: 1
                  additionalProperties: false
                  properties:
                    enum:
                      type: array
                      minItems: 1
                      items:
                        anyOf:
                          - type: number
                          - type: object
                            additionalProperties: false
                            properties:
                              value:
                                type: number
                              description:
                                type: string
                    minimum:
                      type: number
                    maximum:
                      type: number
                    const:
                      anyOf:
                        - type: number
                        - type: object
                          additionalProperties: false
                          required:
                            - delete
                          properties:
                            delete:
                              type: boolean
                              enum:
                                - true
                    optional:
                      type: boolean
                    deletable:
                      type: boolean
                    mismatchError:
                      type: string
                      minLength: 1
                    hidden:
                      type: boolean
                    default:
                      type: number
                    fieldName:
                      type: string
                      minLength: 1
                    input:
                      type: string
                      enum:
                        - text
                        - textarea
                        - select
                        - checkbox
                        - radio
        ddate:
          $ref: '#/components/schemas/dateSchema'
        cdate:
          $ref: '#/components/schemas/dateSchema'
        tcdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        tmdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        readers:
          $ref: '#/components/schemas/groupsSchema'
        nonreaders:
          $ref: '#/components/schemas/groupsSchema'
        writers:
          $ref: '#/components/schemas/groupsSchema'
        signatures:
          $ref: '#/components/schemas/signaturesSchema'
        tauthor:
          type: string
          minLength: 1
        domain:
          type: string
          minLength: 1
    Message:
      additionalProperties: false
      properties:
        id:
          type: string
        signature:
          type: string
        invitation:
          type: string
        domain:
          type: string
        delivered:
          type: boolean
        requestId:
          type: string
        cdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        vdate:
          type: integer
          nullable: true
          minimum: 0
          maximum: 9999999999999
        tvdate:
          type: integer
          minimum: 0
          maximum: 9999999999999
        tauthor:
          type: string
        referrer:
          type: string
          nullable: true
        status:
          type: string
        executedOn:
          type: string
        timestamp:
          type: integer
        content:
          type: object
          properties:
            from:
              type: string
            fromname:
              type: string
            to:
              type: string
            replyTo:
              type: string
              nullable: true
            subject:
              type: string
            text:
              type: string
            sendAt:
              type: integer
        logs:
          type: array
          items:
            type: object
        jobId:
          type: string
    MessageRequestForInvitation:
      additionalProperties: false
      required:
        - signature
      properties:
        signature:
          anyOf:
            - type: string
              minLength: 1
            - type: object
              additionalProperties: false
              required:
                - param
              properties:
                param:
                  type: object
                  minProperties: 1
                  additionalProperties: false
                  properties:
                    const:
                      type: string
                      minLength: 1
                    regex:
                      type: string
                      minLength: 1
                    minLength:
                      type: integer
                      minimum: 0
                    maxLength:
                      type: integer
                      minimum: 0
                    enum:
                      type: array
                      minItems: 1
                      items:
                        anyOf:
                          - type: string
                            minLength: 1
                          - type: object
                            additionalProperties: false
                            properties:
                              value:
                                type: string
                                minLength: 1
                              prefix:
                                type: string
                                minLength: 1
                              description:
                                type: string
                                minLength: 1
                    mismatchError:
                      type: string
                      minLength: 1
                    input:
                      type: string
                      enum:
                        - text
                        - select
                        - checkbox
                        - radio
                    fieldName:
                      type: string
                      minLength: 1
                    hidden:
                      type: boolean
                    default:
                      type: string
                      minLength: 1
        replyTo:
          anyOf:
            - type: string
              minLength: 1
            - type: object
              additionalProperties: false
              required:
                - param
              properties:
                param:
                  type: object
                  minProperties: 1
                  additionalProperties: false
                  properties:
                    const:
                      type: string
                      minLength: 1
                    regex:
                      type: string
                      minLength: 1
                    minLength:
                      type: integer
                      minimum: 0
                    maxLength:
                      type: integer
                      minimum: 0
                    enum:
                      type: array
                      minItems: 1
                      items:
                        anyOf:
                          - type: string
                            minLength: 1
                          - type: object
                            additionalProperties: false
                            properties:
                              value:
                                type: string
                                minLength: 1
                              prefix:
                                type: string
                                minLength: 1
                              description:
                                type: string
                                minLength: 1
                    mismatchError:
                      type: string
                      minLength: 1
                    optional:
                      type: boolean
                    deletable:
                      type: boolean
                    input:
                      type: string
                      enum:
                        - text
                        - select
                        - checkbox
                        - radio
                    fieldName:
                      type: string
                      minLength: 1
                    hidden:
                      type: boolean
                    default:
                      type: string
                      minLength: 1
        useJob:
          anyOf:
            - type: boolean
            - type: object
              additionalProperties: false
              required:
                - param
              properties:
                param:
                  type: object
                  minProperties: 1
                  additionalProperties: false
                  properties:
                    const:
                      type: boolean
                    enum:
                      type: array
                      minItems: 1
                      maxItems: 2
                      items:
                        type: boolean
                    mismatchError:
                      type: string
                      minLength: 1
                    optional:
                      type: boolean
        parentGroup:
          anyOf:
            - type: string
              minLength: 1
            - type: object
              additionalProperties: false
              required:
                - param
              properties:
                param:
                  type: object
                  minProperties: 1
                  additionalProperties: false
                  properties:
                    const:
                      type: string
                      minLength: 1
                    prefix:
                      type: string
                      minLength: 1
                    optional:
                      type: boolean
        sendAt:
          $ref: '#/components/schemas/dateSchema'
        subject:
          $ref: '#/components/schemas/messageProp'
        message:
          $ref: '#/components/schemas/messageProp'
        groups:
          anyOf:
            - type: array
              minItems: 1
              items:
                type: string
                minLength: 1
            - type: object
              additionalProperties: false
              required:
                - param
              properties:
                param:
                  type: object
                  additionalProperties: false
                  properties:
                    items:
                      type: array
                      minItems: 1
                      items:
                        type: object
                        additionalProperties: false
                        minProperties: 1
                        properties:
                          value:
                            type: string
                            minLength: 1
                          prefix:
                            type: string
                            minLength: 1
                          description:
                            type: string
                            minLength: 1
                          optional:
                            type: boolean
                    inGroup:
                      type: string
                      minLength: 1
                    const:
                      type: array
                      minItems: 1
                      items:
                        type: string
                        minLength: 1
                    regex:
                      type: string
                      minLength: 1
                    mismatchError:
                      type: string
                      minLength: 1
                    input:
                      type: string
                      enum:
                        - text
                        - textarea
                        - select
                        - multiselect
                        - checkbox
                        - radio
                    fieldName:
                      type: string
                      minLength: 1
                    hidden:
                      type: boolean
                    default:
                      type: array
                      minItems: 1
                      items:
                        type: string
                        minLength: 1
        ignoreGroups:
          anyOf:
            - type: array
              minItems: 1
              items:
                type: string
                minLength: 1
            - type: object
              additionalProperties: false
              required:
                - param
              properties:
                param:
                  type: object
                  additionalProperties: false
                  properties:
                    items:
                      type: array
                      minItems: 1
                      items:
                        type: object
                        additionalProperties: false
                        minProperties: 1
                        properties:
                          value:
                            type: string
                            minLength: 1
                          prefix:
                            type: string
                            minLength: 1
                          description:
                            type: string
                            minLength: 1
                          optional:
                            type: boolean
                    inGroup:
                      type: string
                      minLength: 1
                    const:
                      type: array
                      minItems: 1
                      items:
                        type: string
                        minLength: 1
                    regex:
                      type: string
                      minLength: 1
                    mismatchError:
                      type: string
                      minLength: 1
                    input:
                      type: string
                      enum:
                        - text
                        - textarea
                        - select
                        - multiselect
                        - checkbox
                        - radio
                    fieldName:
                      type: string
                      minLength: 1
                    hidden:
                      type: boolean
                    optional:
                      type: boolean
                    default:
                      type: array
                      minItems: 1
                      items:
                        type: string
                        minLength: 1
        fromEmail:
          anyOf:
            - type: string
              minLength: 1
              maxLength: 254
            - type: object
              additionalProperties: false
              required:
                - param
              properties:
                param:
                  type: object
                  minProperties: 1
                  additionalProperties: false
                  properties:
                    const:
                      type: string
                      minLength: 1
                      maxLength: 254
                    regex:
                      type: string
                      minLength: 1
        fromName:
          anyOf:
            - type: string
              minLength: 1
              maxLength: 1000
            - type: object
              additionalProperties: false
              required:
                - param
              properties:
                param:
                  type: object
                  minProperties: 1
                  additionalProperties: false
                  properties:
                    const:
                      type: string
                      minLength: 1
                      maxLength: 1000
                    regex:
                      type: string
                      minLength: 1
    MessageRequest:
      additionalProperties: false
      properties:
        id:
          type: string
          minLength: 1
        signature:
          type: string
          minLength: 1
        invitation:
          type: string
          minLength: 1
        domain:
          type: string
          minLength: 1
        replyTo:
          type: string
          minLength: 1
        useJob:
          type: boolean
        jobId:
          type: string
          minLength: 1
        parentGroup:
          type: string
          minLength: 1
        sendAt:
          type: integer
          minimum: 0
          maximum: 9999999999999
        subject:
          type: string
          minLength: 1
        message:
          type: string
          minLength: 1
        groups:
          type: array
          minItems: 1
          items:
            type: string
            minLength: 1
        ignoreGroups:
          type: array
          minItems: 1
          items:
            type: string
            minLength: 1
        fromEmail:
          type: string
          minLength: 1
          maxLength: 254
        fromName:
          type: string
          minLength: 1
          maxLength: 1000
        tauthor:
          type: string
          minLength: 1
    Log:
      additionalProperties: false
      properties:
        id:
          type: string
        jobId:
          type: string
        invitation:
          type: string
        user:
          type: string
        executedOn:
          type: string
        sdate:
          type: integer
        status:
          type: string
        processIndex:
          type: integer
          minimum: 0
        parentGroup:
          type: string
          minLength: 1
        progress:
          type: object
          additionalProperties: false
          properties:
            groupsProcessed:
              type: array
              minItems: 2
              maxItems: 2
              items:
                type: integer
                minimum: 0
            emailsProcessed:
              type: array
              minItems: 2
              maxItems: 2
              items:
                type: integer
                minimum: 0
        log:
          type: array
          nullable: true
          items:
            type: string
        edate:
          type: integer
        expireAt:
          type: string
        error:
          type: object
    MetaContentSingleField:
      type: object
      minProperties: 1
      properties:
        values:
          type: array
          minItems: 1
          maxItems: 1
          items:
            type: string
            minLength: 1
        weights:
          type: array
          minItems: 1
          maxItems: 1
          items:
            type: integer
        signatures:
          type: array
          minItems: 1
          maxItems: 1
          items:
            type: string
            minLength: 1
      additionalProperties: false
    EdgeProp:
      anyOf:
        - type: string
          minLength: 1
        - type: object
          additionalProperties: false
          required:
            - param
          properties:
            param:
              type: object
              minProperties: 1
              additionalProperties: false
              properties:
                type:
                  type: string
                  enum:
                    - profile
                    - group
                    - note
                    - tag
                regex:
                  type: string
                  minLength: 1
                const:
                  anyOf:
                    - type: string
                      minLength: 1
                    - type: object
                      additionalProperties: false
                      required:
                        - delete
                      properties:
                        delete:
                          type: boolean
                          enum:
                            - true
                withInvitation:
                  type: string
                  minLength: 1
                inGroup:
                  type: string
                  minLength: 1
                notInGroup:
                  type: string
                  minLength: 1
                withVenueid:
                  type: string
                  minLength: 1
                withContent:
                  type: object
                mismatchError:
                  type: string
                  minLength: 1
                description:
                  type: string
                  minLength: 1
                hidden:
                  type: boolean
                default:
                  type: string
                  minLength: 1
                fieldName:
                  type: string
                  minLength: 1
                options:
                  type: object
                  properties:
                    group:
                      type: string
                      minLength: 1
                  additionalProperties: false
    Error:
      additionalProperties: false
      required:
        - status
        - name
        - message
      properties:
        status:
          type: integer
        name:
          type: string
        message:
          type: string
        details:
          type: object
    groupsSchema:
      anyOf:
        - type: array
          items:
            type: string
            minLength: 1
        - type: object
          minProperties: 1
          additionalProperties: false
          properties:
            append:
              type: array
              items:
                type: string
                minLength: 1
            remove:
              type: array
              items:
                type: string
                minLength: 1
            replace:
              type: object
              additionalProperties: false
              required:
                - index
                - value
              properties:
                index:
                  type: integer
                  minimum: 0
                value:
                  type: string
                  minLength: 1
            param:
              type: object
              additionalProperties: false
              properties:
                change:
                  type: string
                  enum:
                    - append
                    - remove
                    - replace
                const:
                  anyOf:
                    - type: array
                      items:
                        type: string
                        minLength: 1
                    - type: object
                      additionalProperties: false
                      required:
                        - delete
                      properties:
                        delete:
                          type: boolean
                          enum:
                            - true
                regex:
                  type: string
                  minLength: 1
                enum:
                  type: array
                  minItems: 1
                  items:
                    anyOf:
                      - type: string
                        minLength: 1
                      - type: object
                        additionalProperties: false
                        properties:
                          value:
                            type: string
                            minLength: 1
                          prefix:
                            type: string
                            minLength: 1
                          description:
                            type: string
                            minLength: 1
                items:
                  type: array
                  items:
                    type: object
                    additionalProperties: false
                    properties:
                      value:
                        type: string
                        minLength: 1
                      prefix:
                        type: string
                        minLength: 1
                      description:
                        type: string
                        minLength: 1
                      optional:
                        type: boolean
                mismatchError:
                  type: string
                  minLength: 1
                default:
                  type: array
                  items:
                    type: string
                    minLength: 1
                optional:
                  type: boolean
                deletable:
                  type: boolean
            delete:
              type: boolean
              enum:
                - true
    signaturesSchema:
      anyOf:
        - type: array
          items:
            type: string
            minLength: 1
        - type: object
          minProperties: 1
          additionalProperties: false
          properties:
            append:
              type: array
              items:
                type: string
                minLength: 1
            remove:
              type: array
              items:
                type: string
                minLength: 1
            replace:
              type: object
              additionalProperties: false
              required:
                - index
                - value
              properties:
                index:
                  type: integer
                  minimum: 0
                value:
                  type: string
                  minLength: 1
            param:
              type: object
              additionalProperties: false
              properties:
                const:
                  type: array
                  items:
                    type: string
                    minLength: 1
                regex:
                  type: string
                  minLength: 1
                enum:
                  type: array
                  minItems: 1
                  items:
                    anyOf:
                      - type: string
                        minLength: 1
                      - type: object
                        additionalProperties: false
                        properties:
                          value:
                            type: string
                            minLength: 1
                          prefix:
                            type: string
                            minLength: 1
                          description:
                            type: string
                            minLength: 1
                items:
                  type: array
                  minItems: 1
                  items:
                    type: object
                    additionalProperties: false
                    properties:
                      value:
                        type: string
                        minLength: 1
                      prefix:
                        type: string
                        minLength: 1
                      description:
                        type: string
                        minLength: 1
                      optional:
                        type: boolean
                mismatchError:
                  type: string
                  minLength: 1
                default:
                  type: array
                  items:
                    type: string
                    minLength: 1
            delete:
              type: boolean
              enum:
                - true
    dateSchema:
      anyOf:
        - type: integer
          minimum: 0
          maximum: 9999999999999
        - type: string
          minLength: 1
        - type: object
          minProperties: 1
          additionalProperties: false
          properties:
            delete:
              type: boolean
              enum:
                - true
            param:
              type: object
              additionalProperties: false
              properties:
                const:
                  anyOf:
                    - type: integer
                      minimum: 0
                      maximum: 9999999999999
                    - type: object
                      required:
                        - delete
                      properties:
                        delete:
                          type: boolean
                          enum:
                            - true
                      additionalProperties: false
                range:
                  type: array
                  minItems: 2
                  maxItems: 2
                  items:
                    anyOf:
                      - type: integer
                        minimum: 0
                        maximum: 9999999999999
                      - type: string
                        minLength: 1
                minimum:
                  type: integer
                  minimum: 0
                  maximum: 9999999999999
                maximum:
                  type: integer
                  minimum: 0
                  maximum: 9999999999999
                optional:
                  type: boolean
                deletable:
                  type: boolean
    replacementSchema:
      anyOf:
        - type: boolean
        - type: object
          minProperties: 1
          additionalProperties: false
          properties:
            delete:
              type: boolean
              enum:
                - true
            param:
              type: object
              additionalProperties: false
              properties:
                const:
                  anyOf:
                    - type: boolean
                    - type: object
                      required:
                        - delete
                      properties:
                        delete:
                          type: boolean
                          enum:
                            - true
                      additionalProperties: false
                enum:
                  type: array
                  minItems: 1
                  items:
                    type: boolean
                mismatchError:
                  type: string
                  minLength: 1
                optional:
                  type: boolean
                deletable:
                  type: boolean
    noteIdSchema:
      anyOf:
        - type: string
          minLength: 1
        - type: object
          additionalProperties: false
          properties:
            param:
              type: object
              additionalProperties: false
              properties:
                withInvitation:
                  anyOf:
                    - type: string
                      minLength: 1
                    - type: array
                      minItems: 1
                      items:
                        type: string
                        minLength: 1
                withVenueid:
                  type: string
                  minLength: 1
                withContent:
                  type: object
                  minProperties: 1
                mismatchError:
                  type: string
                  minLength: 1
                optional:
                  type: boolean
            delete:
              type: boolean
              enum:
                - true
    groupIdSchema:
      anyOf:
        - type: string
          minLength: 1
        - type: object
          additionalProperties: false
          properties:
            param:
              type: object
              additionalProperties: false
              properties:
                withInvitation:
                  anyOf:
                    - type: string
                      minLength: 1
                    - type: array
                      minItems: 1
                      items:
                        type: string
                        minLength: 1
                regex:
                  type: string
                  minLength: 1
                mismatchError:
                  type: string
                  minLength: 1
                optional:
                  type: boolean
            delete:
              type: boolean
              enum:
                - true
    invitationIdSchema:
      anyOf:
        - type: string
          minLength: 1
        - type: object
          additionalProperties: false
          properties:
            param:
              type: object
              additionalProperties: false
              properties:
                withInvitation:
                  anyOf:
                    - type: string
                      minLength: 1
                    - type: array
                      minItems: 1
                      items:
                        type: string
                        minLength: 1
                regex:
                  type: string
                  minLength: 1
                mismatchError:
                  type: string
                  minLength: 1
                optional:
                  type: boolean
            delete:
              type: boolean
              enum:
                - true
    tagIdSchema:
      anyOf:
        - type: string
          minLength: 1
        - type: object
          additionalProperties: false
          properties:
            param:
              type: object
              additionalProperties: false
              properties:
                withInvitation:
                  anyOf:
                    - type: string
                      minLength: 1
                    - type: array
                      minItems: 1
                      items:
                        type: string
                        minLength: 1
                mismatchError:
                  type: string
                  minLength: 1
                optional:
                  type: boolean
            delete:
              type: boolean
              enum:
                - true
    forumSchema:
      anyOf:
        - type: string
          minLength: 1
        - type: object
          additionalProperties: false
          required:
            - param
          properties:
            param:
              type: object
              minProperties: 1
              additionalProperties: false
              properties:
                withInvitation:
                  anyOf:
                    - type: string
                      minLength: 1
                    - type: array
                      minItems: 1
                      items:
                        type: string
                        minLength: 1
                mismatchError:
                  type: string
                  minLength: 1
                optional:
                  type: boolean
                deletable:
                  type: boolean
    replytoSchema:
      anyOf:
        - type: string
          minLength: 1
        - type: object
          minProperties: 1
          additionalProperties: false
          properties:
            delete:
              type: boolean
              enum:
                - true
            param:
              type: object
              minProperties: 1
              additionalProperties: false
              properties:
                withInvitation:
                  anyOf:
                    - type: string
                      minLength: 1
                    - type: array
                      minItems: 1
                      items:
                        type: string
                        minLength: 1
                withForum:
                  type: string
                  minLength: 1
                mismatchError:
                  type: string
                  minLength: 1
                optional:
                  type: boolean
                deletable:
                  type: boolean
    licenseSchema:
      anyOf:
        - type: string
          minLength: 1
        - type: object
          additionalProperties: false
          properties:
            delete:
              type: boolean
              enum:
                - true
            param:
              type: object
              additionalProperties: false
              properties:
                const:
                  anyOf:
                    - type: string
                      minLength: 1
                    - type: object
                      required:
                        - delete
                      properties:
                        delete:
                          type: boolean
                          enum:
                            - true
                      additionalProperties: false
                enum:
                  type: array
                  minItems: 1
                  items:
                    anyOf:
                      - type: string
                        minLength: 1
                      - type: object
                        additionalProperties: false
                        properties:
                          value:
                            type: string
                            minLength: 1
                          description:
                            type: string
                            minLength: 1
                mismatchError:
                  type: string
                  minLength: 1
                optional:
                  type: boolean
                deletable:
                  type: boolean
    contentSchemaForInvitation:
      type: object
      additionalProperties:
        type: object
        additionalProperties: false
        properties:
          value:
            anyOf:
              - type: string
              - type: number
              - type: boolean
              - type: object
              - type: array
          readers:
            anyOf:
              - type: object
              - type: array
                items:
                  type: string
                  minLength: 1
    contentSchema:
      type: object
      additionalProperties:
        type: object
        additionalProperties: false
        properties:
          description:
            type: string
            minLength: 1
          order:
            type: integer
            minimum: 1
          delete:
            type: boolean
            enum:
              - true
          value:
            anyOf:
              - type: string
              - type: number
              - type: boolean
              - type: object
              - type: array
          readers:
            anyOf:
              - type: object
              - type: array
                items:
                  type: string
                  minLength: 1
    dateprocessesSchema:
      anyOf:
        - type: array
          items:
            anyOf:
              - type: object
                additionalProperties: false
                required:
                  - script
                properties:
                  script:
                    type: string
                    minLength: 1
                  delay:
                    anyOf:
                      - type: integer
                        minimum: 0
                      - type: string
                        minLength: 1
                  dates:
                    type: array
                    minItems: 1
                    items:
                      anyOf:
                        - type: integer
                          minimum: 0
                        - type: string
                          minLength: 1
                  startDate:
                    anyOf:
                      - type: integer
                        minimum: 0
                        maximum: 9999999999999
                      - type: string
                        minLength: 1
                      - type: object
                        additionalProperties: false
                        required:
                          - delete
                        properties:
                          delete:
                            type: boolean
                            enum:
                              - true
                  endDate:
                    anyOf:
                      - type: integer
                        minimum: 0
                        maximum: 9999999999999
                      - type: string
                        minLength: 1
                      - type: object
                        additionalProperties: false
                        required:
                          - delete
                        properties:
                          delete:
                            type: boolean
                            enum:
                              - true
                  cron:
                    type: string
                    minLength: 1
        - type: object
          additionalProperties: false
          properties:
            delete:
              type: boolean
              enum:
                - true
            param:
              type: object
              additionalProperties: false
              properties:
                const:
                  type: object
                  additionalProperties: false
                  required:
                    - delete
                  properties:
                    delete:
                      type: boolean
                      enum:
                        - true
                mismatchError:
                  type: string
                  minLength: 1
                optional:
                  type: boolean
                deletable:
                  type: boolean
    presentationSchema:
      type: array
      items:
        type: object
        additionalProperties: false
        properties:
          name:
            type: string
          order:
            type: integer
            minimum: 1
          input:
            type: string
            enum:
              - text
              - textarea
              - select
              - checkbox
              - radio
          description:
            anyOf:
              - type: string
                minLength: 1
                nullable: true
              - type: array
                items:
                  type: string
                  nullable: true
                  minLength: 1
          fieldName:
            type: string
          hidden:
            type: boolean
          markdown:
            type: boolean
          scroll:
            type: boolean
          default:
            anyOf:
              - type: string
              - type: array
              - type: number
              - type: object
          value:
            anyOf:
              - type: string
              - type: array
              - type: number
              - type: object
    replyForumViewsSchema:
      anyOf:
        - type: array
          items:
            type: object
            additionalProperties: false
            properties:
              id:
                type: string
                minLength: 1
              label:
                type: string
              filter:
                type: string
              sort:
                type: string
                minLength: 1
              nesting:
                type: integer
                minimum: 0
              allowedInvitations:
                type: array
                items:
                  type: string
                  minLength: 1
              expandedInvitations:
                type: array
                items:
                  type: string
                  minLength: 1
              live:
                type: boolean
              layout:
                type: string
              message:
                type: string
        - type: object
          additionalProperties: false
          required:
            - delete
          properties:
            delete:
              type: boolean
              enum:
                - true
    messageProp:
      anyOf:
        - type: string
        - type: object
          additionalProperties: false
          required:
            - param
          properties:
            param:
              type: object
              minProperties: 1
              additionalProperties: false
              properties:
                const:
                  type: string
                  minLength: 1
                regex:
                  type: string
                  minLength: 1
                minLength:
                  type: integer
                  minimum: 0
                maxLength:
                  type: integer
                  minimum: 0
                enum:
                  type: array
                  minItems: 1
                  items:
                    type: string
                    minLength: 1
                mismatchError:
                  type: string
                  minLength: 1
                optional:
                  type: boolean
                input:
                  type: string
                  enum:
                    - text
                    - textarea
                    - select
                fieldName:
                  type: string
                  minLength: 1
                hidden:
                  type: boolean
                default:
                  type: string
                  minLength: 1
  securitySchemes:
    cookieAuth:         # arbitrary name for the security scheme; will be used in the "security" key later
      type: apiKey
      in: cookie
      name: openreview.accessToken  # cookie name
